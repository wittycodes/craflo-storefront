{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/features/carts/cart-popup.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .cartPopup {\\n    top: auto !important;\\n    left: auto !important;\\n    bottom: 50px !important;\\n    right: 50px !important;\\n    box-shadow: 0 21px 36px rgba(0, 0, 0, 0.16);\\n    transform-origin: bottom right;\\n\\n    @media (max-width: 767px) {\\n      max-width: none!important;\\n      width: 100% !important;\\n      bottom: 0 !important;\\n      left: 0!important;\\n      background: #fff;\\n      overflow: initial !important;\\n      transform-origin: bottom center;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport CartPopupButton, { BoxedCartButton } from 'components/cart-popup/cart-popup-button';\nimport { CURRENCY } from 'utils/constant';\nimport { CartSlidePopup } from './cart.style';\nimport { FormattedMessage } from 'react-intl';\nimport { useCart as useCartUI } from 'contexts/cart/use-cart';\nvar CartPopupStyle = createGlobalStyle(_templateObject());\n_c = CartPopupStyle;\n\nvar CartPopUp = function CartPopUp(_ref) {\n  _s();\n\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop,\n      cartCollection = _ref.cartCollection;\n\n  var _useCartUI = useCartUI(),\n      isOpen = _useCartUI.isOpen,\n      toggleCart = _useCartUI.toggleCart; // let cart = useRCart(\"cmVhY3Rpb24vc2hvcDpvRXNybmM5bXFCRHZ0NTJUVw==\")\n  // cartCollection.AggregatePrice = () => cart?.checkout ? cart?.checkout?.summary?.total?.amount : 0\n\n\n  var handleModal = function handleModal() {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: function closeComponent() {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          },\n          __self: _this\n        });\n      },\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 330,\n        cartContents: cart\n      }\n    });\n  };\n\n  var cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mobile || tablet ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CartPopupStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    },\n    __self: _this\n  }), /*#__PURE__*/React.createElement(CartPopupButton, {\n    className: \"product-cart\",\n    itemCount: cartCollection.totalItemQuantity,\n    itemPostfix: cartCollection.totalItemQuantity > 1 ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"cartItems\",\n      defaultMessage: \"items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      },\n      __self: _this\n    }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"cartItem\",\n      defaultMessage: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      },\n      __self: _this\n    }),\n    price: cartCollection.totalPrice,\n    pricePrefix: \"\\u20B9\",\n    onClick: handleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    },\n    __self: _this\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CartSlidePopup, {\n    className: cartSliderClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    },\n    __self: _this\n  }, isOpen && /*#__PURE__*/React.createElement(Cart, {\n    cartCollection: cartCollection,\n    onCloseBtnClick: toggleCart,\n    scrollbarHeight: \"100vh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    },\n    __self: _this\n  })), /*#__PURE__*/React.createElement(BoxedCartButton, {\n    className: \"product-cart\",\n    itemCount: cartCollection.totalItemQuantity,\n    itemPostfix: cartCollection.totalItemQuantity > 1 ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"cartItems\",\n      defaultMessage: \"items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      },\n      __self: _this\n    }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"cartItem\",\n      defaultMessage: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      },\n      __self: _this\n    }),\n    price: cartCollection.totalPrice,\n    pricePrefix: CURRENCY,\n    onClick: toggleCart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    },\n    __self: _this\n  })));\n};\n\n_s(CartPopUp, \"Y9LX3DcRDYLVHak+cr2W41pEpRE=\", false, function () {\n  return [useCartUI];\n});\n\n_c2 = CartPopUp;\nimport inject from \"hocs/inject\";\nimport withCart from \"containers/cart/withCart\";\nimport { withApollo } from \"lib/apollo/withApollo\";\n// {\n//     cart: PropTypes.shape({\n//       totalItems: PropTypes.number,\n//       items: PropTypes.arrayOf(PropTypes.object),\n//       checkout: PropTypes.shape({\n//         fulfillmentTotal: PropTypes.shape({\n//           displayAmount: PropTypes.string\n//         }),\n//         itemTotal: PropTypes.shape({\n//           displayAmount: PropTypes.string\n//         }),\n//         taxTotal: PropTypes.shape({\n//           displayAmount: PropTypes.string\n//         })\n//       })\n//     }),\n//     classes: PropTypes.object,\n//     hasMoreCartItems: PropTypes.bool,\n//     loadMoreCartItems: PropTypes.func,\n//     onChangeCartItemsQuantity: PropTypes.func,\n//     onRemoveCartItems: PropTypes.func,\n//     shop: PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       description: PropTypes.string\n//     })\n// }\n// handleClick = () => Router.push(\"/\");\n//\n// handleItemQuantityChange = (quantity, cartItemId) => {\n//   const { onChangeCartItemsQuantity } = this.props;\n//\n//   onChangeCartItemsQuantity({ quantity, cartItemId });\n// };\n//\n// handleRemoveItem = async (itemId) => {\n//   const { onRemoveCartItems } = this.props;\n//\n//   await onRemoveCartItems(itemId);\n// };\nexport default withApollo()(withCart(inject(\"uiStore\")(CartPopUp)));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartPopupStyle\");\n$RefreshReg$(_c2, \"CartPopUp\");","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/features/carts/cart-popup.tsx"],"names":["React","createGlobalStyle","openModal","closeModal","Cart","CartPopupButton","BoxedCartButton","CURRENCY","CartSlidePopup","FormattedMessage","useCart","useCartUI","CartPopupStyle","CartPopUp","deviceType","mobile","tablet","desktop","cartCollection","isOpen","toggleCart","handleModal","show","config","className","width","height","enableResizing","disableDragging","transition","tension","friction","closeOnClickOutside","component","closeComponent","componentProps","onCloseBtnClick","scrollbarHeight","cartContents","cart","cartSliderClass","totalItemQuantity","totalPrice","inject","withCart","withApollo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport CartPopupButton, {\n  BoxedCartButton\n} from 'components/cart-popup/cart-popup-button';\nimport { CURRENCY } from 'utils/constant';\nimport { CartSlidePopup } from './cart.style';\nimport { FormattedMessage } from 'react-intl';\nimport { useCart as useCartUI } from 'contexts/cart/use-cart';\nimport useRCart from \"hooks/cart/useCart\";\n\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup {\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: 0 21px 36px rgba(0, 0, 0, 0.16);\n    transform-origin: bottom right;\n\n    @media (max-width: 767px) {\n      max-width: none!important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0!important;\n      background: #fff;\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n`;\n\nconst CartPopUp = ({\n  deviceType: { mobile, tablet, desktop },\n  cartCollection\n}) => {\n  let { isOpen, toggleCart } = useCartUI();\n\n  // let cart = useRCart(\"cmVhY3Rpb24vc2hvcDpvRXNybmM5bXFCRHZ0NTJUVw==\")\n  // cartCollection.AggregatePrice = () => cart?.checkout ? cart?.checkout?.summary?.total?.amount : 0\n\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: () => <div />,\n      componentProps: { onCloseBtnClick: closeModal, scrollbarHeight: 330, cartContents: cart },\n    });\n  };\n\n  let cartSliderClass = isOpen === true ? 'cartPopupFixed' : '';\n\n  return (\n    <>\n      {mobile || tablet ? (\n        <>\n          <CartPopupStyle />\n          <CartPopupButton\n            className=\"product-cart\"\n            itemCount={cartCollection.totalItemQuantity}\n            itemPostfix={\n              cartCollection.totalItemQuantity > 1 ? (\n                <FormattedMessage id=\"cartItems\" defaultMessage=\"items\" />\n              ) : (\n                <FormattedMessage id=\"cartItem\" defaultMessage=\"item\" />\n              )\n            }\n            price={cartCollection.totalPrice}\n            pricePrefix=\"₹\"\n            onClick={handleModal}\n          />\n        </>\n      ) : (\n        <>\n          <CartSlidePopup className={cartSliderClass}>\n            {isOpen && (\n              <Cart cartCollection={cartCollection} onCloseBtnClick={toggleCart} scrollbarHeight=\"100vh\" />\n            )}\n          </CartSlidePopup>\n\n          <BoxedCartButton\n            className=\"product-cart\"\n            itemCount={cartCollection.totalItemQuantity}\n            itemPostfix={\n              cartCollection.totalItemQuantity > 1 ? (\n                <FormattedMessage id=\"cartItems\" defaultMessage=\"items\" />\n              ) : (\n                <FormattedMessage id=\"cartItem\" defaultMessage=\"item\" />\n              )\n            }\n            price={cartCollection.totalPrice}\n            pricePrefix={CURRENCY}\n            onClick={toggleCart}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\n\n\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport inject from \"hocs/inject\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nimport CartEmptyMessage from \"@reactioncommerce/components/CartEmptyMessage/v1\";\nimport CartSummary from \"@reactioncommerce/components/CartSummary/v1\";\nimport withCart from \"containers/cart/withCart\";\nimport CartItems from \"components/CartItems\";\nimport CheckoutButtons from \"components/CheckoutButtons\";\nimport Link from \"components/Link\";\nimport Layout from \"components/Layout\";\nimport Router from \"translations/i18nRouter\";\nimport PageLoading from \"components/PageLoading\";\nimport { withApollo } from \"lib/apollo/withApollo\";\n\nimport { locales } from \"translations/config\";\nimport fetchPrimaryShop from \"staticUtils/shop/fetchPrimaryShop\";\nimport fetchTranslations from \"staticUtils/translations/fetchTranslations\";\n\n// {\n//     cart: PropTypes.shape({\n//       totalItems: PropTypes.number,\n//       items: PropTypes.arrayOf(PropTypes.object),\n//       checkout: PropTypes.shape({\n//         fulfillmentTotal: PropTypes.shape({\n//           displayAmount: PropTypes.string\n//         }),\n//         itemTotal: PropTypes.shape({\n//           displayAmount: PropTypes.string\n//         }),\n//         taxTotal: PropTypes.shape({\n//           displayAmount: PropTypes.string\n//         })\n//       })\n//     }),\n//     classes: PropTypes.object,\n//     hasMoreCartItems: PropTypes.bool,\n//     loadMoreCartItems: PropTypes.func,\n//     onChangeCartItemsQuantity: PropTypes.func,\n//     onRemoveCartItems: PropTypes.func,\n//     shop: PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       description: PropTypes.string\n//     })\n// }\n\n  // handleClick = () => Router.push(\"/\");\n  //\n  // handleItemQuantityChange = (quantity, cartItemId) => {\n  //   const { onChangeCartItemsQuantity } = this.props;\n  //\n  //   onChangeCartItemsQuantity({ quantity, cartItemId });\n  // };\n  //\n  // handleRemoveItem = async (itemId) => {\n  //   const { onRemoveCartItems } = this.props;\n  //\n  //   await onRemoveCartItems(itemId);\n  // };\n\n\n\nexport default withApollo()(withCart(inject(\"uiStore\")(CartPopUp)));\n"]},"metadata":{},"sourceType":"module"}