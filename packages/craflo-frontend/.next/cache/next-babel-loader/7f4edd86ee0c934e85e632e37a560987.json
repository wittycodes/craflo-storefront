{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/reaction/components/Link/Link.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NextLink from \"next/link\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useTranslation from \"hooks/useTranslation\";\nvar useStyles = makeStyles(function () {\n  return {\n    anchor: {\n      color: \"inherit\",\n      textDecoration: \"none\"\n    }\n  };\n});\n/**\n * A wrapper around the next Link component\n *\n * @param {React.node} children - The elements the Link will wrap\n * @param {String} className - Classes to apply\n * @param {String} href - the links destination\n * @param {Boolean} isUrlAbsolute - true if the link is absolute\n * @param {Function} onClick - onClick handler\n * @param {Object} param - route params\n * @param {Object} route - the route object\n * @param {Boolean} shouldOpenInNewWindow - if true link opens in new window\n * @param {String} to - another way to specify the links destination\n * @returns {React.Component} A wrapped link element\n */\n\nfunction Link(_ref) {\n  _s();\n\n  var _this = this;\n\n  var children = _ref.children,\n      className = _ref.className,\n      href = _ref.href,\n      isUrlAbsolute = _ref.isUrlAbsolute,\n      _onClick = _ref.onClick,\n      params = _ref.params,\n      route = _ref.route,\n      shouldOpenInNewWindow = _ref.shouldOpenInNewWindow,\n      to = _ref.to,\n      as = _ref.as,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"href\", \"isUrlAbsolute\", \"onClick\", \"params\", \"route\", \"shouldOpenInNewWindow\", \"to\", \"as\"]);\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(\"common\"),\n      locale = _useTranslation.locale;\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      _this.props.onClick(event);\n    }\n  }; // If link is an absolute link, or if link should open in new window,\n  // then directly us an `a` tag, instead of the `NextLink` component\n\n\n  if (isUrlAbsolute || shouldOpenInNewWindow) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: classNames(classes.anchor, className),\n      href: href,\n      onClick: function onClick(event) {\n        return _onClick(event);\n      },\n      onKeyDown: handleKeyDown,\n      tabIndex: 0,\n      target: shouldOpenInNewWindow ? \"_blank\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      },\n      __self: this\n    }, children);\n  }\n\n  var linkToUse = useMemo(function () {\n    return route || to || href;\n  }, [route, to, href]);\n  var hrefWithLocale = useMemo(function () {\n    if (linkToUse === \"/\") return \"/[lang]\";\n    return \"/[lang]\".concat(linkToUse);\n  }, [linkToUse, locale]);\n  var asWithLocale = useMemo(function () {\n    if (linkToUse === \"/\") return \"/\".concat(locale);\n    if (as) return \"/\".concat(locale).concat(as);\n    return \"/\".concat(locale).concat(linkToUse);\n  }, [linkToUse, locale, as]);\n  return /*#__PURE__*/React.createElement(NextLink, _extends({\n    href: hrefWithLocale,\n    as: asWithLocale\n  }, props, {\n    passHref: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    },\n    __self: this\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: classNames(classes.anchor, className),\n    onClick: function onClick(event) {\n      return _onClick(event);\n    },\n    onKeyDown: handleKeyDown,\n    role: \"link\",\n    tabIndex: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    },\n    __self: this\n  }, children));\n}\n\n_s(Link, \"phJM4AX45WTVYIwVMR7h7t7AN1A=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = Link;\nLink.defaultProps = {\n  isUrlAbsolute: false,\n  onClick: function onClick() {},\n  shouldOpenInNewWindow: false\n};\nLink.propTypes = {\n  as: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  isUrlAbsolute: PropTypes.bool,\n  linkItem: PropTypes.object,\n  onClick: PropTypes.func,\n  params: PropTypes.object,\n  route: PropTypes.string,\n  shouldOpenInNewWindow: PropTypes.bool,\n  to: PropTypes.string\n};\nexport default Link;\n\nvar _c;\n\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/components/Link/Link.tsx"],"names":["React","useMemo","PropTypes","NextLink","classNames","makeStyles","useTranslation","useStyles","anchor","color","textDecoration","Link","children","className","href","isUrlAbsolute","onClick","params","route","shouldOpenInNewWindow","to","as","props","classes","locale","handleKeyDown","event","key","linkToUse","hrefWithLocale","asWithLocale","defaultProps","propTypes","string","node","isRequired","bool","linkItem","object","func"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NextLink from \"next/link\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useTranslation from \"hooks/useTranslation\";\n\nconst useStyles = makeStyles(() => ({\n  anchor: {\n    color: \"inherit\",\n    textDecoration: \"none\"\n  }\n}));\n\n/**\n * A wrapper around the next Link component\n *\n * @param {React.node} children - The elements the Link will wrap\n * @param {String} className - Classes to apply\n * @param {String} href - the links destination\n * @param {Boolean} isUrlAbsolute - true if the link is absolute\n * @param {Function} onClick - onClick handler\n * @param {Object} param - route params\n * @param {Object} route - the route object\n * @param {Boolean} shouldOpenInNewWindow - if true link opens in new window\n * @param {String} to - another way to specify the links destination\n * @returns {React.Component} A wrapped link element\n */\nfunction Link({\n  children,\n  className,\n  href,\n  isUrlAbsolute,\n  onClick,\n  params,\n  route,\n  shouldOpenInNewWindow,\n  to,\n  as,\n  ...props\n}) {\n  const classes = useStyles();\n  const { locale } = useTranslation(\"common\");\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      this.props.onClick(event);\n    }\n  };\n\n  // If link is an absolute link, or if link should open in new window,\n  // then directly us an `a` tag, instead of the `NextLink` component\n  if (isUrlAbsolute || shouldOpenInNewWindow) {\n    return (\n      <a\n        className={classNames(classes.anchor, className)}\n        href={href}\n        onClick={(event) => onClick(event)}\n        onKeyDown={handleKeyDown}\n        tabIndex={0}\n        target={shouldOpenInNewWindow ? \"_blank\" : \"\"}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  const linkToUse = useMemo(() => route || to || href, [route, to, href]);\n\n  const hrefWithLocale = useMemo(() => {\n    if (linkToUse === \"/\") return \"/[lang]\";\n    return `/[lang]${linkToUse}`;\n  }, [linkToUse, locale]);\n\n  const asWithLocale = useMemo(() => {\n    if (linkToUse === \"/\") return `/${locale}`;\n    if (as) return `/${locale}${as}`;\n    return `/${locale}${linkToUse}`;\n  }, [linkToUse, locale, as]);\n\n  return (\n    <NextLink href={hrefWithLocale} as={asWithLocale} {...props} passHref>\n      <a\n        className={classNames(classes.anchor, className)}\n        onClick={(event) => onClick(event)}\n        onKeyDown={handleKeyDown}\n        role=\"link\"\n        tabIndex={0}\n      >\n        {children}\n      </a>\n    </NextLink>\n  );\n}\n\nLink.defaultProps = {\n  isUrlAbsolute: false,\n  onClick: () => { },\n  shouldOpenInNewWindow: false\n};\n\nLink.propTypes = {\n  as: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  isUrlAbsolute: PropTypes.bool,\n  linkItem: PropTypes.object,\n  onClick: PropTypes.func,\n  params: PropTypes.object,\n  route: PropTypes.string,\n  shouldOpenInNewWindow: PropTypes.bool,\n  to: PropTypes.string\n};\n\nexport default Link;\n"]},"metadata":{},"sourceType":"module"}