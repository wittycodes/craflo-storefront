{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/components/product-card/product-card-one/product-card-one.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// product card for general\nimport React from 'react';\nimport Image from 'components/image/image';\nimport { Button } from 'components/button/button';\nimport { ProductCardWrapper, ProductImageWrapper, ProductInfo, DiscountPercent, ButtonText } from '../product-card.style';\nimport useCart from 'hooks/cart/useCart';\nimport { Counter } from 'components/counter/counter';\nimport { cartAnimation } from 'utils/cart-animation';\nimport { FormattedMessage } from 'react-intl';\nimport { CartIcon } from 'assets/icons/CartIcon';\nimport priceByCurrencyCode from \"lib/utils/priceByCurrencyCode\";\nimport variantById from \"lib/utils/variantById\";\nimport inject from \"hocs/inject\";\nimport withCart from \"containers/cart/withCart\";\n\nvar ProductCard = function ProductCard(_ref) {\n  _s();\n\n  var title = _ref.title,\n      image = _ref.image,\n      weight = _ref.weight,\n      price = _ref.price,\n      salePrice = _ref.salePrice,\n      discountInPercent = _ref.discountInPercent,\n      cartProducts = _ref.cartProducts,\n      addToCart = _ref.addToCart,\n      updateCart = _ref.updateCart,\n      value = _ref.value,\n      currency = _ref.currency,\n      onChange = _ref.onChange,\n      increment = _ref.increment,\n      decrement = _ref.decrement,\n      data = _ref.data,\n      deviceType = _ref.deviceType,\n      onClick = _ref.onClick,\n      _ref$uiStore = _ref.uiStore,\n      openCartWithTimeout = _ref$uiStore.openCartWithTimeout,\n      pdpSelectedOptionId = _ref$uiStore.pdpSelectedOptionId,\n      pdpSelectedVariantId = _ref$uiStore.pdpSelectedVariantId,\n      setPDPSelectedVariantId = _ref$uiStore.setPDPSelectedVariantId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"image\", \"weight\", \"price\", \"salePrice\", \"discountInPercent\", \"cartProducts\", \"addToCart\", \"updateCart\", \"value\", \"currency\", \"onChange\", \"increment\", \"decrement\", \"data\", \"deviceType\", \"onClick\", \"uiStore\"]);\n\n  var _useCart = useCart(),\n      addItemsToCart = _useCart.addItemsToCart,\n      onRemoveCartItems = _useCart.onRemoveCartItems,\n      cart = _useCart.cart;\n\n  var product = data;\n  var currencyCode = \"USD\";\n  var SelectedVariantId, SelectedOptionId;\n\n  var selectVariant = function selectVariant(variant, optionId) {\n    // Select the variant, and if it has options, the first option\n    var variantId = variant._id;\n    var selectOptionId = optionId;\n\n    if (!selectOptionId && variant.options && variant.options.length) {\n      selectOptionId = variant.options[0]._id;\n    }\n\n    SelectedVariantId = variantId;\n    SelectedOptionId = selectOptionId; //setPDPSelectedVariantId(variantId, selectOptionId);\n  };\n\n  var determineProductPrice = function determineProductPrice() {\n    var selectedVariant = variantById(product.variants, SelectedVariantId);\n    var productPrice;\n\n    if (SelectedOptionId && selectedVariant) {\n      var selectedOption = variantById(selectedVariant.options, SelectedOptionId);\n      productPrice = priceByCurrencyCode(currencyCode, selectedOption.pricing);\n    } else if (!SelectedOptionId && selectedVariant) {\n      productPrice = priceByCurrencyCode(currencyCode, selectedVariant.pricing);\n    }\n\n    return productPrice;\n  };\n\n  selectVariant(product.variants[0], null);\n  var productPrice = determineProductPrice();\n  var compareAtDisplayPrice = productPrice.compareAtPrice && productPrice.compareAtPrice.displayAmount || null;\n\n  var handleAddClick = function handleAddClick(e) {\n    e.stopPropagation();\n    cartAnimation(e); //--console.log(price)\n\n    var selectedVariant = variantById(product.variants, SelectedVariantId);\n    var selectedOption = variantById(selectedVariant.options, SelectedOptionId);\n    var selectedVariantOrOption = selectedOption || selectedVariant; // Call addItemsToCart with an object matching the GraphQL `CartItemInput` schema\n\n    var quantity = 1.0;\n    addItemsToCart([{\n      price: {\n        amount: productPrice.price,\n        currencyCode: currencyCode\n      },\n      productConfiguration: {\n        productId: product.productId,\n        // Pass the productId, not to be confused with _id\n        productVariantId: selectedVariantOrOption.variantId // Pass the variantId, not to be confused with\n\n      },\n      quantity: quantity\n    }]); // if (!isInCart(data.id)) {\n    //   cartAnimation(e);\n    // }\n  };\n\n  var handleRemoveClick = function handleRemoveClick(e) {\n    e.stopPropagation();\n    onRemoveCartItems(data);\n  };\n\n  var isInCart = function isInCart(_id) {\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(ProductCardWrapper, {\n    onClick: onClick,\n    className: \"product-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProductImageWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    url: image,\n    className: \"product-image\",\n    style: {\n      position: 'relative'\n    },\n    alt: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), discountInPercent ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DiscountPercent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, discountInPercent, \"%\")) : ''), /*#__PURE__*/React.createElement(ProductInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"product-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"product-weight\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, weight), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-meta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productPriceWrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, discountInPercent ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"discountedPrice\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, currency, compareAtDisplayPrice ? compareAtDisplayPrice : productPrice.price) : '', /*#__PURE__*/React.createElement(\"span\", {\n    className: \"product-price\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, currency, \" \", productPrice.price)), !isInCart(data.id) ? /*#__PURE__*/React.createElement(Button, {\n    className: \"cart-button\",\n    variant: \"secondary\",\n    borderRadius: 100,\n    onClick: handleAddClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartIcon, {\n    mr: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"addCartButton\",\n    defaultMessage: \"Cart\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(Counter, {\n    value: 1,\n    onDecrement: handleRemoveClick,\n    onIncrement: handleAddClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s(ProductCard, \"uiclmoQAYNZKlv7yuq/yyDQymss=\", false, function () {\n  return [useCart];\n});\n\n_c = ProductCard;\nexport default withCart(inject('uiStore')(ProductCard));\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/components/product-card/product-card-one/product-card-one.tsx"],"names":["React","Image","Button","ProductCardWrapper","ProductImageWrapper","ProductInfo","DiscountPercent","ButtonText","useCart","Counter","cartAnimation","FormattedMessage","CartIcon","priceByCurrencyCode","variantById","inject","withCart","ProductCard","title","image","weight","price","salePrice","discountInPercent","cartProducts","addToCart","updateCart","value","currency","onChange","increment","decrement","data","deviceType","onClick","uiStore","openCartWithTimeout","pdpSelectedOptionId","pdpSelectedVariantId","setPDPSelectedVariantId","props","addItemsToCart","onRemoveCartItems","cart","product","currencyCode","SelectedVariantId","SelectedOptionId","selectVariant","variant","optionId","variantId","_id","selectOptionId","options","length","determineProductPrice","selectedVariant","variants","productPrice","selectedOption","pricing","compareAtDisplayPrice","compareAtPrice","displayAmount","handleAddClick","e","stopPropagation","selectedVariantOrOption","quantity","amount","productConfiguration","productId","productVariantId","handleRemoveClick","isInCart","position","id"],"mappings":"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","sourcesContent":["// product card for general\nimport React from 'react';\nimport Image from 'components/image/image';\nimport { Button } from 'components/button/button';\nimport {\n  ProductCardWrapper,\n  ProductImageWrapper,\n  ProductInfo,\n  DiscountPercent,\n  ButtonText,\n} from '../product-card.style';\nimport useCart from 'hooks/cart/useCart';\nimport { Counter } from 'components/counter/counter';\nimport { cartAnimation } from 'utils/cart-animation';\nimport { FormattedMessage } from 'react-intl';\nimport { CartIcon } from 'assets/icons/CartIcon';\nimport priceByCurrencyCode from \"lib/utils/priceByCurrencyCode\";\nimport variantById from \"lib/utils/variantById\";\nimport inject from \"hocs/inject\";\nimport withCart from \"containers/cart/withCart\";\n\ntype ProductCardProps = {\n  title: string;\n  image: any;\n  weight: string;\n  currency: string;\n  description: string;\n  price: number;\n  salePrice?: number;\n  discountInPercent?: number;\n  data: any;\n  onClick?: (e: any) => void;\n  onChange?: (e: any) => void;\n  increment?: (e: any) => void;\n  decrement?: (e: any) => void;\n  cartProducts?: any;\n  addToCart?: any;\n  updateCart?: any;\n  value?: any;\n  deviceType?: any;\n  uiStore?: any;\n};\n\nconst ProductCard: React.FC<ProductCardProps> = ({\n  title,\n  image,\n  weight,\n  price,\n  salePrice,\n  discountInPercent,\n  cartProducts,\n  addToCart,\n  updateCart,\n  value,\n  currency,\n  onChange,\n  increment,\n  decrement,\n  data,\n  deviceType,\n  onClick, uiStore: { openCartWithTimeout, pdpSelectedOptionId, pdpSelectedVariantId, setPDPSelectedVariantId },\n  ...props\n}) => {\n  const { addItemsToCart, onRemoveCartItems, cart } = useCart();\n\n  const product = data\n  const currencyCode = \"USD\"\n  let SelectedVariantId, SelectedOptionId\n\n  const selectVariant = (variant, optionId) => {\n\n    // Select the variant, and if it has options, the first option\n    const variantId = variant._id;\n    let selectOptionId = optionId;\n    if (!selectOptionId && variant.options && variant.options.length) {\n      selectOptionId = variant.options[0]._id;\n    }\n    SelectedVariantId = variantId\n    SelectedOptionId = selectOptionId\n    //setPDPSelectedVariantId(variantId, selectOptionId);\n  }\n\n  const determineProductPrice = ()=>{\n\n\n    const selectedVariant = variantById(product.variants, SelectedVariantId);\n    let productPrice;\n\n    if (SelectedOptionId && selectedVariant) {\n      const selectedOption = variantById(selectedVariant.options, SelectedOptionId);\n      productPrice = priceByCurrencyCode(currencyCode, selectedOption.pricing);\n    } else if (!SelectedOptionId && selectedVariant) {\n      productPrice = priceByCurrencyCode(currencyCode, selectedVariant.pricing);\n    }\n\n    return productPrice;\n  }\n\n  selectVariant(product.variants[0], null);\n  const productPrice = determineProductPrice();\n  const compareAtDisplayPrice = (productPrice.compareAtPrice && productPrice.compareAtPrice.displayAmount) || null;\n\n\n  const handleAddClick = (e) => {\n    e.stopPropagation();\n    cartAnimation(e);\n    //--console.log(price)\n\n    const selectedVariant = variantById(product.variants, SelectedVariantId);\n    const selectedOption = variantById(selectedVariant.options, SelectedOptionId);\n    const selectedVariantOrOption = selectedOption || selectedVariant;\n\n    // Call addItemsToCart with an object matching the GraphQL `CartItemInput` schema\n    let quantity = 1.0\n    addItemsToCart([\n      {\n        price: {\n          amount: productPrice.price,\n          currencyCode\n        },\n        productConfiguration: {\n          productId: product.productId, // Pass the productId, not to be confused with _id\n          productVariantId: selectedVariantOrOption.variantId // Pass the variantId, not to be confused with\n        },\n        quantity\n      }\n    ]);\n    // if (!isInCart(data.id)) {\n    //   cartAnimation(e);\n    // }\n  };\n  const handleRemoveClick = (e) => {\n    e.stopPropagation();\n    onRemoveCartItems(data);\n  };\n  const isInCart = (_id: number)=>{\n    return true\n  }\n  return (\n    <ProductCardWrapper onClick={onClick} className=\"product-card\">\n      <ProductImageWrapper>\n        <Image\n          url={image}\n          className=\"product-image\"\n          style={{ position: 'relative' }}\n          alt={title}\n        />\n        {discountInPercent ? (\n          <>\n            <DiscountPercent>{discountInPercent}%</DiscountPercent>\n          </>\n        ) : (\n          ''\n        )}\n      </ProductImageWrapper>\n      <ProductInfo>\n        <h3 className=\"product-title\">{title}</h3>\n        <span className=\"product-weight\">{weight}</span>\n        <div className=\"product-meta\">\n          <div className=\"productPriceWrapper\">\n            {discountInPercent ? (\n              <span className=\"discountedPrice\">\n                {currency}\n                {compareAtDisplayPrice ? compareAtDisplayPrice : productPrice.price}\n              </span>\n            ) : (\n              ''\n            )}\n\n            <span className=\"product-price\">\n              {currency} {productPrice.price}\n            </span>\n          </div>\n\n          {!isInCart(data.id) ? (\n            <Button\n              className=\"cart-button\"\n              variant=\"secondary\"\n              borderRadius={100}\n              onClick={handleAddClick}\n            >\n              <CartIcon mr={2} />\n              <ButtonText>\n                <FormattedMessage id=\"addCartButton\" defaultMessage=\"Cart\" />\n              </ButtonText>\n            </Button>\n          ) : (\n            <Counter\n              value={1}\n              onDecrement={handleRemoveClick}\n              onIncrement={handleAddClick}\n            />\n          )}\n        </div>\n      </ProductInfo>\n    </ProductCardWrapper>\n  );\n};\n\nexport default withCart(inject('uiStore')(ProductCard));\n"]},"metadata":{},"sourceType":"module"}