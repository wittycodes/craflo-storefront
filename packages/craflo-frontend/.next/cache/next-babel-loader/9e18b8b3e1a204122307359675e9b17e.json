{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/reaction/components/CatalogGridItem/CatalogGridItem.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { withComponents } from \"@reactioncommerce/components-context\";\nimport { addTypographyStyles, applyTheme, CustomPropTypes } from \"@reactioncommerce/components/utils\";\nimport { priceByCurrencyCode } from \"@reactioncommerce/components/CatalogGridItem/v1/utils\";\nimport Link from \"components/Link\";\nvar ProductMediaWrapper = styled.div.withConfig({\n  displayName: \"CatalogGridItem__ProductMediaWrapper\",\n  componentId: \"sc-100vfik-0\"\n})([\"background-color:\", \";position:relative;\"], applyTheme(\"CatalogGridItem.mediaBackgroundColor\"));\n_c = ProductMediaWrapper;\nvar ProductInfo = styled.div.withConfig({\n  displayName: \"CatalogGridItem__ProductInfo\",\n  componentId: \"sc-100vfik-1\"\n})([\"align-items:center;display:flex;justify-content:space-between;padding-bottom:0;padding-left:0;padding-right:0;padding-top:\", \";\"], applyTheme(\"CatalogGridItem.verticalSpacingBetweenImageAndInfo\"));\n_c2 = ProductInfo;\nvar ProductTitle = styled.aside.withConfig({\n  displayName: \"CatalogGridItem__ProductTitle\",\n  componentId: \"sc-100vfik-2\"\n})([\"\", \" line-height:1.125;\"], addTypographyStyles(\"CatalogGridItemProductTitle\", \"headingTextBold\"));\n_c3 = ProductTitle;\nvar ProductVendor = styled.span.withConfig({\n  displayName: \"CatalogGridItem__ProductVendor\",\n  componentId: \"sc-100vfik-3\"\n})([\"\", \"\"], addTypographyStyles(\"CatalogGridItemProductVendor\", \"labelText\"));\n_c4 = ProductVendor;\nvar PriceContainer = styled.div.withConfig({\n  displayName: \"CatalogGridItem__PriceContainer\",\n  componentId: \"sc-100vfik-4\"\n})([\"text-align:right;\"]);\n_c5 = PriceContainer;\n\nvar CatalogGridItem = /*#__PURE__*/function (_Component) {\n  _inherits(CatalogGridItem, _Component);\n\n  var _super = _createSuper(CatalogGridItem);\n\n  function CatalogGridItem() {\n    var _this;\n\n    _classCallCheck(this, CatalogGridItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      fit: \"cover\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setImageFit\", function () {\n      // Use cover fit if image is landcape, contain if portrait\n      if (typeof Image !== \"undefined\") {\n        var large = _this.primaryImage.URLs.large;\n        var largeImage = new Image();\n        largeImage.src = large;\n\n        largeImage.onload = function () {\n          if (_this._mounted === false) {\n            return;\n          }\n\n          var fit = \"\";\n          var width = largeImage.width,\n              height = largeImage.height;\n\n          if (height > width) {\n            // Image is portrait\n            fit = \"contain\";\n          } else {\n            // Image is landscape\n            fit = \"cover\";\n          }\n\n          if (fit !== _this.state.fit) {\n            _this.setState({\n              fit: fit\n            });\n          }\n        };\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CatalogGridItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._mounted = true;\n      this.setImageFit();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setImageFit();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: \"renderProductMedia\",\n    value: function renderProductMedia() {\n      var _this$props = this.props,\n          ProgressiveImage = _this$props.components.ProgressiveImage,\n          description = _this$props.product.description;\n      var fit = this.state.fit;\n      return /*#__PURE__*/React.createElement(ProductMediaWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ProgressiveImage, {\n        fit: fit,\n        altText: description,\n        presrc: this.primaryImage.URLs.thumbnail,\n        srcs: this.primaryImage.URLs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderProductInfo\",\n    value: function renderProductInfo() {\n      var _this$props2 = this.props,\n          Price = _this$props2.components.Price,\n          currencyCode = _this$props2.currencyCode,\n          _this$props2$product = _this$props2.product,\n          pricing = _this$props2$product.pricing,\n          title = _this$props2$product.title,\n          vendor = _this$props2$product.vendor;\n      var productPrice = priceByCurrencyCode(currencyCode, pricing) || {};\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ProductInfo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ProductTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, title), /*#__PURE__*/React.createElement(PriceContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Price, {\n        displayPrice: productPrice.displayPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ProductVendor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }\n      }, vendor)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          badgeLabels = _this$props3.badgeLabels,\n          BadgeOverlay = _this$props3.components.BadgeOverlay,\n          product = _this$props3.product;\n      var slug = product.slug;\n      var badgeProps = {\n        product: product\n      };\n\n      if (badgeLabels) {\n        badgeProps.badgeLabels = badgeLabels;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        href: \"/product/[...slugOrId]\",\n        as: \"/product/\".concat(slug),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(BadgeOverlay, _extends({}, badgeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }), this.renderProductMedia(), this.renderProductInfo())));\n    }\n  }, {\n    key: \"primaryImage\",\n    get: function get() {\n      var _this$props4 = this.props,\n          primaryImage = _this$props4.product.primaryImage,\n          placeholderImageURL = _this$props4.placeholderImageURL;\n\n      if (!primaryImage) {\n        return {\n          URLs: {\n            thumbnail: placeholderImageURL,\n            small: placeholderImageURL,\n            medium: placeholderImageURL,\n            large: placeholderImageURL\n          }\n        };\n      }\n\n      return primaryImage;\n    }\n  }]);\n\n  return CatalogGridItem;\n}(Component);\n\n_defineProperty(CatalogGridItem, \"propTypes\", {\n  /**\n   * Labels to use for the various badges. Refer to `BadgeOverlay`'s prop documentation.\n   */\n  badgeLabels: PropTypes.shape({\n    BACKORDER: PropTypes.string,\n    BESTSELLER: PropTypes.string,\n    LOW_QUANTITY: PropTypes.string,\n    SOLD_OUT: PropTypes.string,\n    SALE: PropTypes.string\n  }),\n\n  /**\n   * You can provide a `className` prop that will be applied to the outermost DOM element\n   * rendered by this component. We do not recommend using this for styling purposes, but\n   * it can be useful as a selector in some situations.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If you've set up a components context using\n   * [@reactioncommerce/components-context](https://github.com/reactioncommerce/components-context)\n   * (recommended), then this prop will come from there automatically. If you have not\n   * set up a components context or you want to override one of the components in a\n   * single spot, you can pass in the components prop directly.\n   */\n  components: PropTypes.shape({\n    BadgeOverlay: CustomPropTypes.component.isRequired,\n    Link: CustomPropTypes.component.isRequired,\n    Price: CustomPropTypes.component.isRequired,\n    ProgressiveImage: CustomPropTypes.component.isRequired\n  }),\n\n  /**\n   * Currency code to display the price for. Product must include a pricing object with the code in `product.pricing`\n   */\n  currencyCode: PropTypes.string.isRequired,\n\n  /**\n   * Item click handler\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Image to display when product doesn't have a primary image\n   */\n  placeholderImageURL: PropTypes.string,\n\n  /**\n   * Product to display\n   */\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    slug: PropTypes.string,\n    vendor: PropTypes.string,\n    primaryImage: PropTypes.shape({\n      URLs: PropTypes.shape({\n        large: PropTypes.string,\n        medium: PropTypes.string,\n        small: PropTypes.string,\n        thumbnail: PropTypes.string\n      })\n    }),\n    pricing: PropTypes.arrayOf(PropTypes.shape({\n      currency: PropTypes.shape({\n        code: PropTypes.string\n      }),\n      displayPrice: PropTypes.string\n    })),\n    isSoldOut: PropTypes.bool,\n    isBackorder: PropTypes.bool,\n    isOnSale: PropTypes.bool,\n    isLowQuantity: PropTypes.bool,\n    isBestseller: PropTypes.bool\n  })\n});\n\n_defineProperty(CatalogGridItem, \"defaultProps\", {\n  badgeLabels: null,\n  onClick: function onClick() {},\n  placeholderImageURL: \"\"\n});\n\nexport default _c6 = withComponents(CatalogGridItem);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ProductMediaWrapper\");\n$RefreshReg$(_c2, \"ProductInfo\");\n$RefreshReg$(_c3, \"ProductTitle\");\n$RefreshReg$(_c4, \"ProductVendor\");\n$RefreshReg$(_c5, \"PriceContainer\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/components/CatalogGridItem/CatalogGridItem.tsx"],"names":["React","Component","PropTypes","styled","withComponents","addTypographyStyles","applyTheme","CustomPropTypes","priceByCurrencyCode","Link","ProductMediaWrapper","div","ProductInfo","ProductTitle","aside","ProductVendor","span","PriceContainer","CatalogGridItem","fit","Image","large","primaryImage","URLs","largeImage","src","onload","_mounted","width","height","state","setState","setImageFit","props","ProgressiveImage","components","description","product","thumbnail","Price","currencyCode","pricing","title","vendor","productPrice","displayPrice","className","badgeLabels","BadgeOverlay","slug","badgeProps","renderProductMedia","renderProductInfo","placeholderImageURL","small","medium","shape","BACKORDER","string","BESTSELLER","LOW_QUANTITY","SOLD_OUT","SALE","component","isRequired","onClick","func","arrayOf","currency","code","isSoldOut","bool","isBackorder","isOnSale","isLowQuantity","isBestseller"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { withComponents } from \"@reactioncommerce/components-context\";\nimport { addTypographyStyles, applyTheme, CustomPropTypes } from \"@reactioncommerce/components/utils\";\nimport { priceByCurrencyCode } from \"@reactioncommerce/components/CatalogGridItem/v1/utils\";\nimport Link from \"components/Link\";\n\nconst ProductMediaWrapper = styled.div`\n  background-color: ${applyTheme(\"CatalogGridItem.mediaBackgroundColor\")};\n  position: relative;\n`;\n\nconst ProductInfo = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: ${applyTheme(\"CatalogGridItem.verticalSpacingBetweenImageAndInfo\")};\n`;\n\nconst ProductTitle = styled.aside`\n  ${addTypographyStyles(\"CatalogGridItemProductTitle\", \"headingTextBold\")}\n  line-height: 1.125;\n`;\n\nconst ProductVendor = styled.span`\n  ${addTypographyStyles(\"CatalogGridItemProductVendor\", \"labelText\")}\n`;\n\nconst PriceContainer = styled.div`\n  text-align: right;\n`;\n\nclass CatalogGridItem extends Component {\n  static propTypes = {\n    /**\n     * Labels to use for the various badges. Refer to `BadgeOverlay`'s prop documentation.\n     */\n    badgeLabels: PropTypes.shape({\n      BACKORDER: PropTypes.string,\n      BESTSELLER: PropTypes.string,\n      LOW_QUANTITY: PropTypes.string,\n      SOLD_OUT: PropTypes.string,\n      SALE: PropTypes.string\n    }),\n    /**\n     * You can provide a `className` prop that will be applied to the outermost DOM element\n     * rendered by this component. We do not recommend using this for styling purposes, but\n     * it can be useful as a selector in some situations.\n     */\n    className: PropTypes.string,\n    /**\n     * If you've set up a components context using\n     * [@reactioncommerce/components-context](https://github.com/reactioncommerce/components-context)\n     * (recommended), then this prop will come from there automatically. If you have not\n     * set up a components context or you want to override one of the components in a\n     * single spot, you can pass in the components prop directly.\n     */\n    components: PropTypes.shape({\n      BadgeOverlay: CustomPropTypes.component.isRequired,\n      Link: CustomPropTypes.component.isRequired,\n      Price: CustomPropTypes.component.isRequired,\n      ProgressiveImage: CustomPropTypes.component.isRequired\n    }),\n    /**\n     * Currency code to display the price for. Product must include a pricing object with the code in `product.pricing`\n     */\n    currencyCode: PropTypes.string.isRequired,\n    /**\n     * Item click handler\n     */\n    onClick: PropTypes.func,\n    /**\n     * Image to display when product doesn't have a primary image\n     */\n    placeholderImageURL: PropTypes.string,\n    /**\n     * Product to display\n     */\n    product: PropTypes.shape({\n      title: PropTypes.string,\n      slug: PropTypes.string,\n      vendor: PropTypes.string,\n      primaryImage: PropTypes.shape({\n        URLs: PropTypes.shape({\n          large: PropTypes.string,\n          medium: PropTypes.string,\n          small: PropTypes.string,\n          thumbnail: PropTypes.string\n        })\n      }),\n      pricing: PropTypes.arrayOf(PropTypes.shape({\n        currency: PropTypes.shape({\n          code: PropTypes.string\n        }),\n        displayPrice: PropTypes.string\n      })),\n      isSoldOut: PropTypes.bool,\n      isBackorder: PropTypes.bool,\n      isOnSale: PropTypes.bool,\n      isLowQuantity: PropTypes.bool,\n      isBestseller: PropTypes.bool\n    })\n  };\n\n  static defaultProps = {\n    badgeLabels: null,\n    onClick() {},\n    placeholderImageURL: \"\"\n  };\n\n  state = {\n    fit: \"cover\"\n  };\n\n  componentDidMount() {\n    this._mounted = true;\n\n    this.setImageFit();\n  }\n\n  componentDidUpdate() {\n    this.setImageFit();\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  setImageFit = () => {\n    // Use cover fit if image is landcape, contain if portrait\n    if (typeof Image !== \"undefined\") {\n      const { large } = this.primaryImage.URLs;\n      const largeImage = new Image();\n      largeImage.src = large;\n      largeImage.onload = () => {\n        if (this._mounted === false) {\n          return;\n        }\n\n        let fit = \"\";\n        const { width, height } = largeImage;\n        if (height > width) {\n          // Image is portrait\n          fit = \"contain\";\n        } else {\n          // Image is landscape\n          fit = \"cover\";\n        }\n\n        if (fit !== this.state.fit) {\n          this.setState({ fit });\n        }\n      };\n    }\n  };\n\n  get primaryImage() {\n    const { product: { primaryImage }, placeholderImageURL } = this.props;\n    if (!primaryImage) {\n      return {\n        URLs: {\n          thumbnail: placeholderImageURL,\n          small: placeholderImageURL,\n          medium: placeholderImageURL,\n          large: placeholderImageURL\n        }\n      };\n    }\n    return primaryImage;\n  }\n\n  renderProductMedia() {\n    const { components: { ProgressiveImage }, product: { description } } = this.props;\n    const { fit } = this.state;\n\n    return (\n      <ProductMediaWrapper>\n        <ProgressiveImage\n          fit={fit}\n          altText={description}\n          presrc={this.primaryImage.URLs.thumbnail}\n          srcs={this.primaryImage.URLs}\n        />\n      </ProductMediaWrapper>\n    );\n  }\n\n  renderProductInfo() {\n    const {\n      components: { Price },\n      currencyCode,\n      product: { pricing, title, vendor }\n    } = this.props;\n    const productPrice = priceByCurrencyCode(currencyCode, pricing) || {};\n\n    return (\n      <div>\n        <ProductInfo>\n          <ProductTitle>{title}</ProductTitle>\n          <PriceContainer>\n            <Price displayPrice={productPrice.displayPrice} />\n          </PriceContainer>\n        </ProductInfo>\n        <div>\n          <ProductVendor>{vendor}</ProductVendor>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { className, badgeLabels, components: { BadgeOverlay }, product } = this.props;\n\n    const { slug } = product;\n    const badgeProps = { product };\n\n    if (badgeLabels) {\n      badgeProps.badgeLabels = badgeLabels;\n    }\n\n    return (\n      <div className={className}>\n        <Link\n          href=\"/product/[...slugOrId]\"\n          as={`/product/${slug}`}\n        >\n          <BadgeOverlay {...badgeProps}>\n            {this.renderProductMedia()}\n            {this.renderProductInfo()}\n          </BadgeOverlay>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default withComponents(CatalogGridItem);\n"]},"metadata":{},"sourceType":"module"}