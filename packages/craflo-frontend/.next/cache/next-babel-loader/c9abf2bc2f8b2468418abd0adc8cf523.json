{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport useStores from \"hooks/useStores\";\nimport viewerQuery from \"./viewer.gql\";\n/**\n * Gets current viewer's data\n *\n * @returns {Array} the viewer's data\n */\n\nexport default function useViewer() {\n  _s();\n\n  var _useStores = useStores(),\n      authStore = _useStores.authStore;\n\n  var account = authStore.account,\n      setAccount = authStore.setAccount,\n      accessToken = authStore.accessToken;\n\n  var _useQuery = useQuery(viewerQuery, {\n    skip: !accessToken\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  var viewer = data && data.viewer;\n  useEffect(function () {\n    if (!viewer && accessToken) {\n      refetch();\n    }\n  }, [accessToken, viewer]);\n  useEffect(function () {\n    if (viewer) setAccount(viewer);\n  }, [viewer]);\n  return [account, loading, refetch];\n}\n\n_s(useViewer, \"h1dh8ThWEC61VK3HovTVf2j01yk=\", false, function () {\n  return [useStores, useQuery];\n});","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/hooks/viewer/useViewer.tsx"],"names":["useEffect","useQuery","useStores","viewerQuery","useViewer","authStore","account","setAccount","accessToken","skip","loading","data","refetch","viewer"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,mBACZF,SAAS,EADG;AAAA,MAC1BG,SAD0B,cAC1BA,SAD0B;;AAAA,MAE1BC,OAF0B,GAEWD,SAFX,CAE1BC,OAF0B;AAAA,MAEjBC,UAFiB,GAEWF,SAFX,CAEjBE,UAFiB;AAAA,MAELC,WAFK,GAEWH,SAFX,CAELG,WAFK;;AAAA,kBAICP,QAAQ,CAACE,WAAD,EAAc;AACvDM,IAAAA,IAAI,EAAE,CAACD;AADgD,GAAd,CAJT;AAAA,MAI1BE,OAJ0B,aAI1BA,OAJ0B;AAAA,MAIjBC,IAJiB,aAIjBA,IAJiB;AAAA,MAIXC,OAJW,aAIXA,OAJW;;AAQlC,MAAMC,MAAM,GAAGF,IAAI,IAAIA,IAAI,CAACE,MAA5B;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACa,MAAD,IAAWL,WAAf,EAA4B;AAC1BI,MAAAA,OAAO;AACR;AACF,GAJQ,EAIN,CAACJ,WAAD,EAAcK,MAAd,CAJM,CAAT;AAMAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,MAAJ,EAAYN,UAAU,CAACM,MAAD,CAAV;AACb,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,SAAO,CACLP,OADK,EAELI,OAFK,EAGLE,OAHK,CAAP;AAKD;;GAzBuBR,S;UACAF,S,EAGaD,Q","sourcesContent":["import { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport useStores from \"hooks/useStores\";\nimport viewerQuery from \"./viewer.gql\";\n\n/**\n * Gets current viewer's data\n *\n * @returns {Array} the viewer's data\n */\nexport default function useViewer() {\n  const { authStore } = useStores();\n  const { account, setAccount, accessToken } = authStore;\n\n  const { loading, data, refetch } = useQuery(viewerQuery, {\n    skip: !accessToken\n  });\n\n  const viewer = data && data.viewer;\n\n  useEffect(() => {\n    if (!viewer && accessToken) {\n      refetch();\n    }\n  }, [accessToken, viewer]);\n\n  useEffect(() => {\n    if (viewer) setAccount(viewer);\n  }, [viewer]);\n\n  return [\n    account,\n    loading,\n    refetch\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}