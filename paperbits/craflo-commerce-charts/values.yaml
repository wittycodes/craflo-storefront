##
## Global configuration
global:
  ##
  ## The Stripe secret key from your Stripe account dashboard. 
  ## Required if you want Stripe payments to work.
  stripeKey: YOUR_PRIVATE_STRIPE_API_KEY

  ##
  ## Set this if you want to track storefront analytics such as 
  ## page views with Segment. You can find this key on your Segment dashboard.
  segmentKey: YOUR_PRIVATE_SEGMENT_API_KEY

  ##
  ## The MongoDB database URL.
  ## Note: This overrides the Mongo subchart values i.e. bring your own
  # mongoUrl: 

  ##
  ## The oplog URL for the MongoDB deployment.
  ## Note: This overrides the Mongo subchart values i.e. bring your own
  # mongoOplogUrl: 
  

##
## Admin panel configuration
admin:
  enabled: true
  ssl: true
  host: manage.craflo.com
  replicaCount: 1
  image:
    repository: craflo-commerce_admin
    pullPolicy: Always
    # imagePullSecret:
  service:
    annotations: {}
    type: ClusterIP
  ingress:
    enabled: true
    path: "/"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.org/websocket-services: "craflo-admin"
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
      nginx.ingress.kubernetes.io/websocket-services: craflo-admin
      #      nginx.ingress.kubernetes.io/enable-cors
      #      nginx.ingress.kubernetes.io/service-upstream: true
      #      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    livenessPath:
    tls:
      enabled: true
      secretName: tls-secret


##
## makefront panel configuration
makefront:
  enabled: true
  ssl: true
  host: make.craflo.com
  replicaCount: 1
  image:
    repository: craflo-commerce_makefront
    pullPolicy: Always
    # imagePullSecret:
  service:
    annotations: {}
    type: ClusterIP
  ingress:
    enabled: true
    path: "/"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.org/websocket-services: "craflo-makefront"
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
      nginx.ingress.kubernetes.io/websocket-services: craflo-makefront
#      nginx.ingress.kubernetes.io/enable-cors
#      nginx.ingress.kubernetes.io/service-upstream: true
#      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"

    livenessPath:
    tls:
      enabled: true
      secretName: tls-secret



##
## API configuration
api:
  enabled: true
  host: api.craflo.com
  ssl: true
  replicaCount: 1
  sendGridAPIKey: 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

  ##
  ## An SMTP mail url, e.g. smtp://user:pass@example.com:465, that is
  ## used to send all transactional emails from the email-smtp plugin.
  # mailUrl: smtp://user:pass@example.com:465

  ##
  ## If this is true, on startup the API will auto-initialize a MongoDB
  ## replica set if one isn't found.
  initReplicaSet: false
  image:
    repository: craflo-commerce_api
    pullPolicy: IfNotPresent
    # imagePullSecret:
  service:
    annotations: {}
    type: ClusterIP
  ingress:
    enabled: true
    path: "/"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.org/websocket-services: craflo-api
    tls:
      enabled: true
      secretName: tls-secret

##
## Identity service configuration
identity:
  enabled: true
  host: accounts.craflo.com
  ssl: true
  replicaCount: 1
  image:
    repository: craflo-commerce_identity
    pullPolicy: IfNotPresent
    # imagePullSecret:
  service:
    annotations: {}
    type: ClusterIP
  ingress:
    enabled: true
    path: "/"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.org/websocket-services: craflo-identity
      nginx.ingress.kubernetes.io/websocket-services: craflo-identity
    tls:
      enabled: true
      secretName: tls-secret

##
## Example storefront configuration
web:
  enabled: true
  host: pgcrafts.craflo.com
  ssl: true
  replicaCount: 1
  # sessionSecret: CHANGEME
  image:
    repository: craflo-commerce_storefront
    pullPolicy: IfNotPresent
    # imagePullSecret:
  service:
    annotations: {}
    type: ClusterIP
#  deployment:
#    annotations:
#      dapr.io/enabled: "true"
#      dapr.io/id: "demo-web"
#      dapr.io/port: "3000"
  ingress:
    enabled: true
    path: "/"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-micro"
      kubernetes.io/ingress.class: nginx
      nginx.org/websocket-services: craflo-web
      nginx.ingress.kubernetes.io/websocket-services: craflo-web
    livenessPath:
    tls:
      enabled: true
      secretName: micr-prod-tls

##
## Hydra chart configuration
hydra:
  enabled: true
  replicaCount: 1
  ssl: true
  image:
    repository: oryd/hydra
    tag: v1.0.8
    pullPolicy: IfNotPresent
    # imagePullSecret:

  ##
  ## Refer to https://www.ory.sh/docs/oryos.9/hydra/advanced#openid-connect
  pairwiseSalt: youReallyNeedToChangeThis

  ##
  ## A key or keys used to encrypt sensitive data using AES-GCM (256 bit) and
  ## validate HMAC signatures. Must be at least 16 characters long. This may be
  ## a single key or a comma-separated list where the first item in the list is
  ## used for signing and encryption and the whole list is used for verifying
  ## signatures and decryption. See https://www.ory.sh/docs/hydra/configuration
  secretsSystem: youReallyNeedToChangeThis
  service:
    annotations: {}
    type: ClusterIP
  frontend:
    host: access.craflo.com
    ingress:
      enabled: true
      path: "/"
      annotations: {}
      livenessPath:
      tls:
        enabled: true
        secretName: tls-secret
  admin:
    host: oauth2.craflo.com
    ingress:
      enabled: true
      path: "/"
      annotations: {}
      livenessPath:
      tls:
        enabled: true
        secretName: tls-secret