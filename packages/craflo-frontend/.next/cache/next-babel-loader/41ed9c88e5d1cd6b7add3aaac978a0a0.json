{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/features/search/search.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react'; // import { SearchBox } from 'components/search-box/search-box';\n\nimport { useAppState, useAppDispatch } from 'contexts/app/app.provider';\nimport { useRouter } from 'next/router';\nimport { useIntl } from 'react-intl';\nimport { DataSearch } from '@appbaseio/reactivesearch';\nimport { StyledSearchButton } from \"../../components/search-box/search-box.style\";\nimport { SearchIcon } from \"../../assets/icons/SearchIcon\";\n\nconst Search = (_ref) => {\n  let {\n    onSubmit\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"onSubmit\"]);\n\n  const searchTerm = useAppState('searchTerm');\n  const dispatch = useAppDispatch();\n  const router = useRouter();\n  const intl = useIntl(); // console.log(\"yeyeyieeieiepieepieepipieipepie\")\n\n  const handleOnChange = e => {\n    const {\n      value\n    } = e.target;\n    dispatch({\n      type: 'SET_SEARCH_TERM',\n      payload: value\n    });\n  };\n\n  const {\n    pathname,\n    query\n  } = router;\n\n  const onSearch = e => {\n    e.preventDefault();\n\n    const {\n      type\n    } = query,\n          rest = _objectWithoutProperties(query, [\"type\"]);\n\n    router.push({\n      pathname,\n      query: _objectSpread(_objectSpread({}, rest), {}, {\n        text: searchTerm\n      })\n    }, {\n      pathname: `/${type}`,\n      query: _objectSpread(_objectSpread({}, rest), {}, {\n        text: searchTerm\n      })\n    });\n    dispatch({\n      type: 'SET_SEARCH_TERM',\n      payload: ''\n    });\n\n    if (onSubmit) {\n      onSubmit();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataSearch, {\n    style: {\n      width: '80%',\n      marginLeft: '0%',\n      marginRight: '8%'\n    },\n    name: \"search\",\n    componentId: \"Search\",\n    filterLabel: \"\",\n    dataField: [\"product.description\"],\n    title: \"Search\",\n    fieldWeights: [1, 3],\n    placeholder: \"Start Typing your Imagination..\",\n    autosuggest: true,\n    highlight: true,\n    highlightField: \"group_city\",\n    queryFormat: \"or\",\n    fuzziness: 0,\n    debounce: 100,\n    size: 10,\n    showFilter: true,\n    URLParams: false,\n    innerClass: {\n      title: 'elastic-search-title',\n      input: (props === null || props === void 0 ? void 0 : props.mobile) ? 'elastic-search-input-mobile' : (props === null || props === void 0 ? void 0 : props.minimal) ? 'elastic-search-input-minimal' : 'elastic-search-input'\n    },\n    showClear: true,\n    iconPosition: 'right',\n    showIcon: (props === null || props === void 0 ? void 0 : props.mobile) ? false : !!(props === null || props === void 0 ? void 0 : props.minimal),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    },\n    __self: this\n  }), (props === null || props === void 0 ? void 0 : props.mobile) ? null : (props === null || props === void 0 ? void 0 : props.minimal) ? null : /*#__PURE__*/React.createElement(StyledSearchButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    },\n    __self: this\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    style: {\n      marginRight: 10,\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    },\n    __self: this\n  }), intl.formatMessage({\n    id: 'searchButtonText',\n    defaultMessage: 'Search'\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/features/search/search.tsx"],"names":["React","useAppState","useAppDispatch","useRouter","useIntl","DataSearch","StyledSearchButton","SearchIcon","Search","onSubmit","props","searchTerm","dispatch","router","intl","handleOnChange","e","value","target","type","payload","pathname","query","onSearch","preventDefault","rest","push","text","width","marginLeft","marginRight","title","input","mobile","minimal","formatMessage","id","defaultMessage"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { SearchBox } from 'components/search-box/search-box';\nimport { useAppState, useAppDispatch } from 'contexts/app/app.provider';\nimport { useRouter } from 'next/router';\nimport { useIntl } from 'react-intl';\nimport {DataSearch} from '@appbaseio/reactivesearch'\nimport {StyledSearchButton} from \"../../components/search-box/search-box.style\";\nimport {SearchIcon} from \"../../assets/icons/SearchIcon\";\ninterface Props {\n  minimal?: boolean;\n  showButtonText?: boolean;\n  onSubmit?: () => void;\n  [key: string]: unknown;\n}\n\nconst Search: React.FC<Props> = ({ onSubmit, ...props }) => {\n  const searchTerm = useAppState('searchTerm');\n  const dispatch = useAppDispatch();\n  const router = useRouter();\n  const intl = useIntl();\n  // console.log(\"yeyeyieeieiepieepieepipieipepie\")\n\n  const handleOnChange = (e) => {\n    const { value } = e.target;\n    dispatch({ type: 'SET_SEARCH_TERM', payload: value });\n  };\n  const { pathname, query } = router;\n  const onSearch = (e) => {\n    e.preventDefault();\n    const { type, ...rest } = query;\n    router.push(\n      {\n        pathname,\n        query: { ...rest, text: searchTerm },\n      },\n      {\n        pathname: `/${type}`,\n        query: { ...rest, text: searchTerm },\n      }\n    );\n    dispatch({ type: 'SET_SEARCH_TERM', payload: '' });\n    if (onSubmit) {\n      onSubmit();\n    }\n  };\n  return (\n    <>\n      <DataSearch\n        style={{\n          width: '80%',\n          marginLeft: '0%',\n          marginRight: '8%'\n        }}\n        name=\"search\"\n        componentId=\"Search\"\n        filterLabel={\"\"}\n        dataField={[\"product.description\"]}\n        title=\"Search\"\n        fieldWeights={[1, 3]}\n        placeholder=\"Start Typing your Imagination..\"\n        autosuggest={true}\n        highlight={true}\n        highlightField=\"group_city\"\n        queryFormat=\"or\"\n        fuzziness={0}\n        debounce={100}\n        size={10}\n        showFilter={true}\n        URLParams={false}\n        innerClass={{\n          title: 'elastic-search-title',\n          input: props?.mobile? 'elastic-search-input-mobile' : props?.minimal ? 'elastic-search-input-minimal': 'elastic-search-input'\n        }}\n        showClear={true}\n        iconPosition={'right'}\n        showIcon={props?.mobile? false: !!props?.minimal}\n      />\n      {\n        props?.mobile? null: props?.minimal? null :\n        (<StyledSearchButton>\n          <SearchIcon style={{marginRight: 10, marginLeft: 10}}/>\n          {intl.formatMessage({\n            id: 'searchButtonText',\n            defaultMessage: 'Search',\n          })}\n        </StyledSearchButton>)\n      }\n    {/*<SearchBox*/}\n    {/*  onEnter={onSearch}*/}\n    {/*  onChange={handleOnChange}*/}\n    {/*  value={searchTerm}*/}\n    {/*  */}\n    {/*  placeholder={intl.formatMessage({*/}\n    {/*    id: 'searchPlaceholder',*/}\n    {/*    defaultMessage: 'Search your products from here',*/}\n    {/*  })}*/}\n    {/*  categoryType={query.type}*/}\n    {/*  buttonText={intl.formatMessage({*/}\n    {/*    id: 'searchButtonText',*/}\n    {/*    defaultMessage: 'Search',*/}\n    {/*  })}*/}\n    {/*  {...props}*/}\n    {/*/>*/}\n\n      {/*<ReactiveList*/}\n      {/*  react={{*/}\n      {/*    \"and\": [\"Search\"]*/}\n      {/*  }}*/}\n      {/*  componentId=\"SearchResult\"*/}\n      {/*>*/}\n      {/*  {*/}\n      {/*    ({ data, error, loading, ...rest }) => (<>*/}\n\n      {/*      {console.log(data, \"search result\")}*/}\n      {/*    </>)*/}\n      {/*  }*/}\n      {/*</ReactiveList>*/}\n    </>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}