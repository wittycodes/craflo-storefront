{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { ClickCounterViewModel } from \"./clickCounterViewModel\";\nimport { ClickCounterModel } from \"../clickCounterModel\";\nexport var ClickCounterViewModelBinder = /*#__PURE__*/function () {\n  function ClickCounterViewModelBinder(eventManager) {\n    _classCallCheck(this, ClickCounterViewModelBinder);\n  }\n\n  _createClass(ClickCounterViewModelBinder, [{\n    key: \"modelToViewModel\",\n    value: function () {\n      var _modelToViewModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(model, viewModel, bindingContext) {\n        var _this = this;\n\n        var binding;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!viewModel) {\n                  viewModel = new ClickCounterViewModel();\n                }\n\n                binding = {\n                  name: \"click-counter\",\n                  displayName: \"Click counter\",\n                  readonly: bindingContext ? bindingContext.readonly : false,\n                  model: model,\n                  draggable: true,\n                  editor: \"click-counter-editor\",\n                  applyChanges: function () {\n                    var _applyChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return _this.modelToViewModel(model, viewModel, bindingContext);\n\n                            case 2:\n                              _this.eventManager.dispatchEvent(\"onContentUpdate\");\n\n                            case 3:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    function applyChanges() {\n                      return _applyChanges.apply(this, arguments);\n                    }\n\n                    return applyChanges;\n                  }()\n                };\n                viewModel[\"widgetBinding\"] = binding;\n                return _context2.abrupt(\"return\", viewModel);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function modelToViewModel(_x, _x2, _x3) {\n        return _modelToViewModel.apply(this, arguments);\n      }\n\n      return modelToViewModel;\n    }()\n  }, {\n    key: \"canHandleModel\",\n    value: function canHandleModel(model) {\n      return model instanceof ClickCounterModel;\n    }\n  }]);\n\n  return ClickCounterViewModelBinder;\n}();","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/paperbits/src/components/click-counter/design/clickCounterViewModelBinder.ts"],"names":["ClickCounterViewModel","ClickCounterModel","ClickCounterViewModelBinder","eventManager","model","viewModel","bindingContext","binding","name","displayName","readonly","draggable","editor","applyChanges","modelToViewModel","dispatchEvent"],"mappings":";;;;AAAA,SAASA,qBAAT,QAAsC,yBAAtC;AAEA,SAASC,iBAAT,QAAkC,sBAAlC;AAKA,WAAaC,2BAAb;AACI,uCAA6BC,YAA7B,EAAyD;AAAA;AAAG;;AADhE;AAAA;AAAA;AAAA,yGAGkCC,KAHlC,EAG4DC,SAH5D,EAG+FC,cAH/F;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIQ,oBAAI,CAACD,SAAL,EAAgB;AACZA,kBAAAA,SAAS,GAAG,IAAIL,qBAAJ,EAAZ;AACH;;AAEKO,gBAAAA,OARd,GAQ2D;AAC/CC,kBAAAA,IAAI,EAAE,eADyC;AAE/CC,kBAAAA,WAAW,EAAE,eAFkC;AAG/CC,kBAAAA,QAAQ,EAAEJ,cAAc,GAAGA,cAAc,CAACI,QAAlB,GAA6B,KAHN;AAI/CN,kBAAAA,KAAK,EAAEA,KAJwC;AAK/CO,kBAAAA,SAAS,EAAE,IALoC;AAM/CC,kBAAAA,MAAM,EAAE,sBANuC;AAO/CC,kBAAAA,YAAY;AAAA,iGAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACJ,KAAI,CAACC,gBAAL,CAAsBV,KAAtB,EAA6BC,SAA7B,EAAwCC,cAAxC,CADI;;AAAA;AAEV,8BAAA,KAAI,CAACH,YAAL,CAAkBY,aAAlB,CAAgC,iBAAhC;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPmC,iBAR3D;AAqBQV,gBAAAA,SAAS,CAAC,eAAD,CAAT,GAA6BE,OAA7B;AArBR,kDAuBeF,SAvBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mCA0B0BD,KA1B1B,EA0B6D;AACrD,aAAOA,KAAK,YAAYH,iBAAxB;AACH;AA5BL;;AAAA;AAAA","sourcesContent":["import { ClickCounterViewModel } from \"./clickCounterViewModel\";\nimport { ViewModelBinder } from \"@paperbits/common/widgets\";\nimport { ClickCounterModel } from \"../clickCounterModel\";\nimport { EventManager } from \"@paperbits/common/events\";\nimport { IWidgetBinding } from \"@paperbits/common/editing\";\nimport { Bag } from \"@paperbits/common\";\n\nexport class ClickCounterViewModelBinder implements ViewModelBinder<ClickCounterModel, ClickCounterViewModel>  {\n    constructor(private readonly eventManager: EventManager) { }\n\n    public async modelToViewModel(model: ClickCounterModel, viewModel?: ClickCounterViewModel, bindingContext?: Bag<any>): Promise<ClickCounterViewModel> {\n        if (!viewModel) {\n            viewModel = new ClickCounterViewModel();\n        }\n\n        const binding: IWidgetBinding<ClickCounterModel> = {\n            name: \"click-counter\",\n            displayName: \"Click counter\",\n            readonly: bindingContext ? bindingContext.readonly : false,\n            model: model,\n            draggable: true,\n            editor: \"click-counter-editor\",\n            applyChanges: async () => {\n                await this.modelToViewModel(model, viewModel, bindingContext);\n                this.eventManager.dispatchEvent(\"onContentUpdate\");\n            }\n        };\n\n        viewModel[\"widgetBinding\"] = binding;\n\n        return viewModel;\n    }\n\n    public canHandleModel(model: ClickCounterModel): boolean {\n        return model instanceof ClickCounterModel;\n    }\n}"]},"metadata":{},"sourceType":"module"}