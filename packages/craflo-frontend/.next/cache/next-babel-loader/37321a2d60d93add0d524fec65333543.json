{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright Paperbits. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file and at https://paperbits.io/license/mit.\n */\nimport { ClickCounterModel } from \"./clickCounterModel\";\nexport var ClickCounterHandlers = /*#__PURE__*/function () {\n  function ClickCounterHandlers() {\n    _classCallCheck(this, ClickCounterHandlers);\n  }\n\n  _createClass(ClickCounterHandlers, [{\n    key: \"getWidgetOrder\",\n    value: function () {\n      var _getWidgetOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var widgetOrder;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                widgetOrder = {\n                  name: \"clickCounter\",\n                  displayName: \"Click counter\",\n                  iconClass: \"paperbits-puzzle-10\",\n                  requires: [\"html\", \"js\"],\n                  createModel: function () {\n                    var _createModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              return _context.abrupt(\"return\", new ClickCounterModel());\n\n                            case 1:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    function createModel() {\n                      return _createModel.apply(this, arguments);\n                    }\n\n                    return createModel;\n                  }()\n                };\n                return _context2.abrupt(\"return\", widgetOrder);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getWidgetOrder() {\n        return _getWidgetOrder.apply(this, arguments);\n      }\n\n      return getWidgetOrder;\n    }()\n  }]);\n\n  return ClickCounterHandlers;\n}();","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/paperbits/src/components/click-counter/clickCounterHandlers.ts"],"names":["ClickCounterModel","ClickCounterHandlers","widgetOrder","name","displayName","iconClass","requires","createModel"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,iBAAT,QAAkC,qBAAlC;AAGA,WAAaC,oBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEcC,gBAAAA,WAFd,GAE0C;AAC9BC,kBAAAA,IAAI,EAAE,cADwB;AAE9BC,kBAAAA,WAAW,EAAE,eAFiB;AAG9BC,kBAAAA,SAAS,EAAE,qBAHmB;AAI9BC,kBAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,IAAT,CAJoB;AAK9BC,kBAAAA,WAAW;AAAA,gGAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+DACF,IAAIP,iBAAJ,EADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALmB,iBAF1C;AAAA,kDAYeE,WAZf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["/**\n * @license\n * Copyright Paperbits. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file and at https://paperbits.io/license/mit.\n */\n\nimport { IWidgetOrder, IWidgetHandler } from \"@paperbits/common/editing\";\nimport { ClickCounterModel } from \"./clickCounterModel\";\n\n\nexport class ClickCounterHandlers implements IWidgetHandler {\n    public async getWidgetOrder(): Promise<IWidgetOrder> {\n        const widgetOrder: IWidgetOrder = {\n            name: \"clickCounter\",\n            displayName: \"Click counter\",\n            iconClass: \"paperbits-puzzle-10\",\n            requires: [\"html\", \"js\"],\n            createModel: async () => {\n                return new ClickCounterModel();\n            }\n        };\n\n        return widgetOrder;\n    }\n}"]},"metadata":{},"sourceType":"module"}