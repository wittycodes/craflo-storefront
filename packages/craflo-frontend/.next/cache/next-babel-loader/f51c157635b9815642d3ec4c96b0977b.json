{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/reaction/lib/utils/withLocales.tsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport locales from \"./locales.json\";\n/**\n *\n * @name withLocales\n * @summary Imports locales.json and provides it to components via props\n * @param {Object} ComponentWithLocales - The component you want to provide locales\n * @return {Class} - React component with locales on props\n */\n\nexport default function withLocales(ComponentWithLocales) {\n  var _this = this;\n\n  function WithLocales(props) {\n    // eslint-disable-line require-jsdoc\n    return /*#__PURE__*/React.createElement(ComponentWithLocales, _extends({\n      ref: props.forwardRef\n    }, props, {\n      locales: locales,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      },\n      __self: this\n    }));\n  }\n\n  WithLocales.propTypes = {\n    forwardRef: PropTypes.func,\n    locales: PropTypes.object\n  };\n  WithLocales.defaultProps = {\n    locales: {}\n  }; // eslint-disable-next-line react/no-multi-comp, react/display-name\n\n  return /*#__PURE__*/React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(WithLocales, _extends({}, props, {\n      forwardRef: ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 43\n      },\n      __self: _this\n    }));\n  });\n}","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/lib/utils/withLocales.tsx"],"names":["React","PropTypes","locales","withLocales","ComponentWithLocales","WithLocales","props","forwardRef","propTypes","func","object","defaultProps","ref"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,WAAT,CAAqBC,oBAArB,EAA2C;AAAA;;AACxD,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAE;AAC5B,wBAAO,oBAAC,oBAAD;AAAsB,MAAA,GAAG,EAAEA,KAAK,CAACC;AAAjC,OAAiDD,KAAjD;AAAwD,MAAA,OAAO,EAAEJ,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAEDG,EAAAA,WAAW,CAACG,SAAZ,GAAwB;AACtBD,IAAAA,UAAU,EAAEN,SAAS,CAACQ,IADA;AAEtBP,IAAAA,OAAO,EAAED,SAAS,CAACS;AAFG,GAAxB;AAKAL,EAAAA,WAAW,CAACM,YAAZ,GAA2B;AACzBT,IAAAA,OAAO,EAAE;AADgB,GAA3B,CAVwD,CAcxD;;AACA,sBAAOF,KAAK,CAACO,UAAN,CAAiB,UAACD,KAAD,EAAQM,GAAR;AAAA,wBAAgB,oBAAC,WAAD,eAAiBN,KAAjB;AAAwB,MAAA,UAAU,EAAEM,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB;AAAA,GAAjB,CAAP;AACD","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport locales from \"./locales.json\";\n\n/**\n *\n * @name withLocales\n * @summary Imports locales.json and provides it to components via props\n * @param {Object} ComponentWithLocales - The component you want to provide locales\n * @return {Class} - React component with locales on props\n */\nexport default function withLocales(ComponentWithLocales) {\n  function WithLocales(props) { // eslint-disable-line require-jsdoc\n    return <ComponentWithLocales ref={props.forwardRef} {...props} locales={locales} />;\n  }\n\n  WithLocales.propTypes = {\n    forwardRef: PropTypes.func,\n    locales: PropTypes.object\n  };\n\n  WithLocales.defaultProps = {\n    locales: {}\n  };\n\n  // eslint-disable-next-line react/no-multi-comp, react/display-name\n  return React.forwardRef((props, ref) => <WithLocales {...props} forwardRef={ref} />);\n}\n"]},"metadata":{},"sourceType":"module"}