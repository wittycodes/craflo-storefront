{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright Paperbits. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file and at https://paperbits.io/license/mit.\n */\nimport * as _ from \"lodash\";\nimport * as FileSaver from \"file-saver\";\nimport * as Objects from \"@paperbits/common/objects\";\nimport { Operator, OrderDirection } from \"@paperbits/common/persistence\";\nvar pageSize = 20;\n/**\n * Static object storage for demo purposes. It stores all the uploaded blobs in memory.\n */\n\nexport var StaticObjectStorage = /*#__PURE__*/function () {\n  function StaticObjectStorage(httpClient) {\n    _classCallCheck(this, StaticObjectStorage);\n\n    _defineProperty(this, \"loadDataPromise\", void 0);\n\n    _defineProperty(this, \"storageDataObject\", void 0);\n\n    _defineProperty(this, \"splitter\", \"/\");\n  }\n\n  _createClass(StaticObjectStorage, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.loadDataPromise) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.loadDataPromise);\n\n              case 2:\n                this.loadDataPromise = new Promise( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve) {\n                    var response;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return _this.httpClient.send({\n                              url: \"/data/demo.json\",\n                              method: \"GET\"\n                            });\n\n                          case 2:\n                            response = _context.sent;\n                            _this.storageDataObject = response.toObject();\n                            resolve(_this.storageDataObject);\n\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                return _context2.abrupt(\"return\", this.loadDataPromise);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"addObject\",\n    value: function () {\n      var _addObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(path, dataObject) {\n        var _this2 = this;\n\n        var pathParts, mainNode;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (path) {\n                  pathParts = path.split(this.splitter);\n                  mainNode = pathParts[0];\n\n                  if (pathParts.length === 1 || pathParts.length === 2 && !pathParts[1]) {\n                    this.storageDataObject[mainNode] = dataObject;\n                  } else {\n                    if (!_.has(this.storageDataObject, mainNode)) {\n                      this.storageDataObject[mainNode] = {};\n                    }\n\n                    this.storageDataObject[mainNode][pathParts[1]] = dataObject;\n                  }\n                } else {\n                  Object.keys(dataObject).forEach(function (prop) {\n                    var obj = dataObject[prop];\n                    var pathParts = prop.split(_this2.splitter);\n                    var mainNode = pathParts[0];\n\n                    if (pathParts.length === 1 || pathParts.length === 2 && !pathParts[1]) {\n                      _this2.storageDataObject[mainNode] = obj;\n                    } else {\n                      if (!_.has(_this2.storageDataObject, mainNode)) {\n                        _this2.storageDataObject[mainNode] = {};\n                      }\n\n                      _this2.storageDataObject[mainNode][pathParts[1]] = obj;\n                    }\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function addObject(_x2, _x3) {\n        return _addObject.apply(this, arguments);\n      }\n\n      return addObject;\n    }()\n  }, {\n    key: \"getObject\",\n    value: function () {\n      var _getObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(path) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.getData();\n\n              case 2:\n                data = _context4.sent;\n                return _context4.abrupt(\"return\", Objects.getObjectAt(path, Objects.clone(data)));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getObject(_x4) {\n        return _getObject.apply(this, arguments);\n      }\n\n      return getObject;\n    }()\n  }, {\n    key: \"deleteObject\",\n    value: function () {\n      var _deleteObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(path) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (path) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 2:\n                Objects.deleteNodeAt(path, this.storageDataObject);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deleteObject(_x5) {\n        return _deleteObject.apply(this, arguments);\n      }\n\n      return deleteObject;\n    }()\n  }, {\n    key: \"updateObject\",\n    value: function () {\n      var _updateObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(path, dataObject) {\n        var clone;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (path) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 2:\n                clone = Objects.clone(dataObject);\n                Objects.setValue(path, this.storageDataObject, clone);\n                Objects.cleanupObject(clone); // Ensure all \"undefined\" are cleaned up\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function updateObject(_x6, _x7) {\n        return _updateObject.apply(this, arguments);\n      }\n\n      return updateObject;\n    }()\n  }, {\n    key: \"searchObjects\",\n    value: function () {\n      var _searchObjects = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(path, query) {\n        var data, searchObj, collection, property, value;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getData();\n\n              case 2:\n                data = _context7.sent;\n\n                if (data) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  value: []\n                });\n\n              case 5:\n                searchObj = Objects.getObjectAt(path, data);\n\n                if (searchObj) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  value: []\n                });\n\n              case 8:\n                collection = Object.values(searchObj);\n\n                if (query) {\n                  if (query.filters.length > 0) {\n                    collection = collection.filter(function (x) {\n                      var meetsCriteria = true;\n\n                      var _iterator = _createForOfIteratorHelper(query.filters),\n                          _step;\n\n                      try {\n                        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                          var filter = _step.value;\n                          var left = Objects.getObjectAt(filter.left, x);\n                          var right = filter.right;\n\n                          if (left === undefined) {\n                            meetsCriteria = false;\n                            continue;\n                          }\n\n                          if (typeof left === \"string\") {\n                            left = left.toUpperCase();\n                          }\n\n                          if (typeof right === \"string\") {\n                            right = right.toUpperCase();\n                          }\n\n                          var operator = filter.operator;\n\n                          switch (operator) {\n                            case Operator.contains:\n                              if (left && !left.includes(right)) {\n                                meetsCriteria = false;\n                              }\n\n                              break;\n\n                            case Operator.equals:\n                              if (left !== right) {\n                                meetsCriteria = false;\n                              }\n\n                              break;\n\n                            default:\n                              throw new Error(\"Cannot translate operator into Firebase Realtime Database query.\");\n                          }\n                        }\n                      } catch (err) {\n                        _iterator.e(err);\n                      } finally {\n                        _iterator.f();\n                      }\n\n                      return meetsCriteria;\n                    });\n                  }\n\n                  if (query.orderingBy) {\n                    property = query.orderingBy;\n                    collection = collection.sort(function (x, y) {\n                      var a = Objects.getObjectAt(property, x);\n                      var b = Objects.getObjectAt(property, y);\n                      var modifier = query.orderDirection === OrderDirection.accending ? 1 : -1;\n\n                      if (a > b) {\n                        return modifier;\n                      }\n\n                      if (a < b) {\n                        return -modifier;\n                      }\n\n                      return 0;\n                    });\n                  }\n                }\n\n                value = collection.slice(0, pageSize);\n                return _context7.abrupt(\"return\", new StaticPage(value, collection, pageSize));\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function searchObjects(_x8, _x9) {\n        return _searchObjects.apply(this, arguments);\n      }\n\n      return searchObjects;\n    }()\n  }, {\n    key: \"saveChanges\",\n    value: function () {\n      var _saveChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(delta) {\n        var _this3 = this;\n\n        var saveTasks, keys, state, stateBlob;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                saveTasks = [];\n                keys = [];\n                Object.keys(delta).map(function (key) {\n                  var firstLevelObject = delta[key];\n                  Object.keys(firstLevelObject).forEach(function (subkey) {\n                    keys.push(\"\".concat(key, \"/\").concat(subkey));\n                  });\n                });\n                keys.forEach(function (key) {\n                  var changeObject = Objects.getObjectAt(key, delta);\n\n                  if (changeObject) {\n                    saveTasks.push(_this3.updateObject(key, changeObject));\n                  } else {\n                    saveTasks.push(_this3.deleteObject(key));\n                  }\n                });\n                _context8.next = 6;\n                return Promise.all(saveTasks);\n\n              case 6:\n                state = JSON.stringify(this.storageDataObject);\n                stateBlob = new Blob([state], {\n                  type: \"text/plain;charset=utf-8\"\n                });\n                FileSaver.saveAs(stateBlob, \"demo.json\");\n                /* Uncomment to save changes in a separate file */\n                // const changes = JSON.stringify(delta);\n                // const deltaBlob = new Blob([changes], { type: \"text/plain;charset=utf-8\" });\n                // FileSaver.saveAs(deltaBlob, \"changes.json\");\n\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function saveChanges(_x10) {\n        return _saveChanges.apply(this, arguments);\n      }\n\n      return saveChanges;\n    }()\n  }, {\n    key: \"loadData\",\n    value: function () {\n      var _loadData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                return _context9.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var input = document.createElement(\"input\");\n                  input.type = \"file\";\n\n                  input.onchange = function (e) {\n                    var target = e.target;\n                    var file = target.files[0];\n\n                    if (!file) {\n                      resolve(undefined);\n                    }\n\n                    var reader = new FileReader();\n                    reader.readAsText(file, \"UTF-8\");\n\n                    reader.onload = function (readerEvent) {\n                      var contentString = readerEvent.target.result.toString();\n                      var dataObject = contentString ? JSON.parse(contentString) : undefined;\n                      _this4.storageDataObject = dataObject || _this4.storageDataObject;\n                      _this4.loadDataPromise = new Promise(function (resolve) {\n                        return resolve(_this4.storageDataObject);\n                      });\n                      resolve(dataObject);\n                    };\n                  };\n\n                  input.click();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }()\n  }]);\n\n  return StaticObjectStorage;\n}();\n\nvar StaticPage = /*#__PURE__*/function () {\n  function StaticPage(value, collection, skip) {\n    _classCallCheck(this, StaticPage);\n\n    if (skip > this.collection.length) {\n      this.takeNext = null;\n    }\n  }\n\n  _createClass(StaticPage, [{\n    key: \"takePrev\",\n    value: function () {\n      var _takePrev = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                throw new Error(\"Not implemented\");\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function takePrev() {\n        return _takePrev.apply(this, arguments);\n      }\n\n      return takePrev;\n    }()\n  }, {\n    key: \"takeNext\",\n    value: function () {\n      var _takeNext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var value, skipNext, nextPage;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                value = this.collection.slice(this.skip, this.skip + pageSize);\n                skipNext = this.skip + pageSize;\n                nextPage = new StaticPage(value, this.collection, skipNext);\n                return _context11.abrupt(\"return\", nextPage);\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function takeNext() {\n        return _takeNext.apply(this, arguments);\n      }\n\n      return takeNext;\n    }()\n  }]);\n\n  return StaticPage;\n}();","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/paperbits/persistence/staticObjectStorage.ts"],"names":["_","FileSaver","Objects","Operator","OrderDirection","pageSize","StaticObjectStorage","httpClient","loadDataPromise","Promise","resolve","send","url","method","response","storageDataObject","toObject","path","dataObject","pathParts","split","splitter","mainNode","length","has","Object","keys","forEach","prop","obj","getData","data","getObjectAt","clone","deleteNodeAt","setValue","cleanupObject","query","value","searchObj","collection","values","filters","filter","x","meetsCriteria","left","right","undefined","toUpperCase","operator","contains","includes","equals","Error","orderingBy","property","sort","y","a","b","modifier","orderDirection","accending","slice","StaticPage","delta","saveTasks","map","key","firstLevelObject","subkey","push","changeObject","updateObject","deleteObject","all","state","JSON","stringify","stateBlob","Blob","type","saveAs","reject","input","document","createElement","onchange","e","target","file","files","reader","FileReader","readAsText","onload","readerEvent","contentString","result","toString","parse","click","skip","takeNext","skipNext","nextPage"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Paperbits. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file and at https://paperbits.io/license/mit.\n */\n\n\nimport * as _ from \"lodash\";\nimport * as FileSaver from \"file-saver\";\nimport * as Objects from \"@paperbits/common/objects\";\nimport { HttpClient } from \"@paperbits/common/http\";\nimport { IObjectStorage, Query, Operator, OrderDirection, Page } from \"@paperbits/common/persistence\";\n\nconst pageSize = 20;\n\n/**\n * Static object storage for demo purposes. It stores all the uploaded blobs in memory.\n */\nexport class StaticObjectStorage implements IObjectStorage {\n    private loadDataPromise: Promise<Object>;\n    protected storageDataObject: Object;\n    private splitter = \"/\";\n\n    constructor(private readonly httpClient: HttpClient) { }\n\n    protected async getData(): Promise<Object> {\n        if (this.loadDataPromise) {\n            return this.loadDataPromise;\n        }\n\n        this.loadDataPromise = new Promise<Object>(async (resolve) => {\n            const response = await this.httpClient.send({\n                url: \"/data/demo.json\",\n                method: \"GET\"\n            });\n\n            this.storageDataObject = response.toObject();\n\n            resolve(this.storageDataObject);\n        });\n\n        return this.loadDataPromise;\n    }\n\n    public async addObject(path: string, dataObject: Object): Promise<void> {\n        if (path) {\n            const pathParts = path.split(this.splitter);\n            const mainNode = pathParts[0];\n\n            if (pathParts.length === 1 || (pathParts.length === 2 && !pathParts[1])) {\n                this.storageDataObject[mainNode] = dataObject;\n            }\n            else {\n                if (!_.has(this.storageDataObject, mainNode)) {\n                    this.storageDataObject[mainNode] = {};\n                }\n                this.storageDataObject[mainNode][pathParts[1]] = dataObject;\n            }\n        }\n        else {\n            Object.keys(dataObject).forEach(prop => {\n                const obj = dataObject[prop];\n                const pathParts = prop.split(this.splitter);\n                const mainNode = pathParts[0];\n\n                if (pathParts.length === 1 || (pathParts.length === 2 && !pathParts[1])) {\n                    this.storageDataObject[mainNode] = obj;\n                }\n                else {\n                    if (!_.has(this.storageDataObject, mainNode)) {\n                        this.storageDataObject[mainNode] = {};\n                    }\n                    this.storageDataObject[mainNode][pathParts[1]] = obj;\n                }\n            });\n        }\n    }\n\n    public async getObject<T>(path: string): Promise<T> {\n        const data = await this.getData();\n\n        return Objects.getObjectAt(path, Objects.clone(data));\n    }\n\n    public async deleteObject(path: string): Promise<void> {\n        if (!path) {\n            return;\n        }\n\n        Objects.deleteNodeAt(path, this.storageDataObject);\n    }\n\n    public async updateObject<T>(path: string, dataObject: T): Promise<void> {\n        if (!path) {\n            return;\n        }\n\n        const clone: any = Objects.clone(dataObject);\n        Objects.setValue(path, this.storageDataObject, clone);\n        Objects.cleanupObject(clone); // Ensure all \"undefined\" are cleaned up\n    }\n\n    public async searchObjects<T>(path: string, query: Query<T>): Promise<Page<T>> {\n        const data = await this.getData();\n\n        if (!data) {\n            return { value: [] };\n        }\n\n        const searchObj = Objects.getObjectAt(path, data);\n\n        if (!searchObj) {\n            return { value: [] };\n        }\n\n        let collection: any[] = Object.values(searchObj);\n\n        if (query) {\n            if (query.filters.length > 0) {\n                collection = collection.filter(x => {\n                    let meetsCriteria = true;\n\n                    for (const filter of query.filters) {\n                        let left = Objects.getObjectAt<any>(filter.left, x);\n                        let right = filter.right;\n\n                        if (left === undefined) {\n                            meetsCriteria = false;\n                            continue;\n                        }\n\n                        if (typeof left === \"string\") {\n                            left = left.toUpperCase();\n                        }\n\n                        if (typeof right === \"string\") {\n                            right = right.toUpperCase();\n                        }\n\n                        const operator = filter.operator;\n\n                        switch (operator) {\n                            case Operator.contains:\n                                if (left && !left.includes(right)) {\n                                    meetsCriteria = false;\n                                }\n                                break;\n\n                            case Operator.equals:\n                                if (left !== right) {\n                                    meetsCriteria = false;\n                                }\n                                break;\n\n                            default:\n                                throw new Error(\"Cannot translate operator into Firebase Realtime Database query.\");\n                        }\n                    }\n\n                    return meetsCriteria;\n                });\n            }\n\n            if (query.orderingBy) {\n                const property = query.orderingBy;\n\n                collection = collection.sort((x, y) => {\n                    const a = Objects.getObjectAt<any>(property, x);\n                    const b = Objects.getObjectAt<any>(property, y);\n                    const modifier = query.orderDirection === OrderDirection.accending ? 1 : -1;\n\n                    if (a > b) {\n                        return modifier;\n                    }\n\n                    if (a < b) {\n                        return -modifier;\n                    }\n\n                    return 0;\n                });\n            }\n        }\n\n        const value = collection.slice(0, pageSize);\n\n        return new StaticPage(value, collection, pageSize);\n    }\n\n    public async saveChanges(delta: Object): Promise<void> {\n        const saveTasks = [];\n        const keys = [];\n\n        Object.keys(delta).map(key => {\n            const firstLevelObject = delta[key];\n\n            Object.keys(firstLevelObject).forEach(subkey => {\n                keys.push(`${key}/${subkey}`);\n            });\n        });\n\n        keys.forEach(key => {\n            const changeObject = Objects.getObjectAt(key, delta);\n\n            if (changeObject) {\n                saveTasks.push(this.updateObject(key, changeObject));\n            }\n            else {\n                saveTasks.push(this.deleteObject(key));\n            }\n        });\n\n        await Promise.all(saveTasks);\n\n        const state = JSON.stringify(this.storageDataObject);\n        const stateBlob = new Blob([state], { type: \"text/plain;charset=utf-8\" });\n\n        FileSaver.saveAs(stateBlob, \"demo.json\");\n\n        /* Uncomment to save changes in a separate file */\n        // const changes = JSON.stringify(delta);\n        // const deltaBlob = new Blob([changes], { type: \"text/plain;charset=utf-8\" });\n        // FileSaver.saveAs(deltaBlob, \"changes.json\");\n    }\n\n    public async loadData(): Promise<object> {\n        return new Promise<object>((resolve, reject) => {\n            const input: HTMLInputElement = document.createElement(\"input\");\n            input.type = \"file\";\n\n            input.onchange = e => {\n\n                const target: HTMLInputElement = <HTMLInputElement>e.target;\n                const file = target.files[0];\n\n                if (!file) {\n                    resolve(undefined);\n                }\n\n                const reader = new FileReader();\n                reader.readAsText(file, \"UTF-8\");\n\n                reader.onload = readerEvent => {\n                    const contentString = readerEvent.target.result.toString();\n                    const dataObject = contentString ? JSON.parse(contentString) : undefined;\n                    this.storageDataObject = dataObject || this.storageDataObject;\n\n                    this.loadDataPromise = new Promise<Object>(resolve => resolve(this.storageDataObject));\n\n                    resolve(dataObject);\n                };\n\n            };\n\n            input.click();\n        });\n    }\n}\n\nclass StaticPage<T> implements Page<T> {\n    constructor(\n        public readonly value: T[],\n        private readonly collection: any,\n        private readonly skip: number,\n    ) {\n        if (skip > this.collection.length) {\n            this.takeNext = null;\n        }\n    }\n\n    public async takePrev?(): Promise<Page<T>> {\n        throw new Error(\"Not implemented\");\n    }\n\n    public async takeNext?(): Promise<Page<T>> {\n        const value = this.collection.slice(this.skip, this.skip + pageSize);\n        const skipNext = this.skip + pageSize;\n        const nextPage = new StaticPage<T>(value, this.collection, skipNext);\n\n        return nextPage;\n    }\n}"]},"metadata":{},"sourceType":"module"}