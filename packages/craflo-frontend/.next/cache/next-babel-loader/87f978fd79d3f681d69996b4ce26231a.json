{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport useCart from \"hooks/cart/useCart\";\nvar ANONYMOUS_CART_ID_KEY_NAME = \"_ANONYMOUS_CART_ID_\";\nvar ANONYMOUS_CART_TOKEN_KEY_NAME = \"_ANONYMOUS_CART_TOKEN_\";\n/**\n * Hook to get all carts information\n *\n * @returns {Object} the user's current cart\n */\n\nexport default function useCarts() {\n  _s();\n\n  // const [cartCollection, setCartCollection] = useState({\n  //   shop:{},\n  //   totalItemQuantity: 0,\n  //   totalPrice: 0\n  // })\n  //\n  // useEffect(() => {\n  //\n  //   for (let i = 0; i < localStorage.length; i++) {\n  //     if (localStorage.key(i).substring(0, ANONYMOUS_CART_ID_KEY_NAME.length) == ANONYMOUS_CART_ID_KEY_NAME) {\n  //       const shopId = localStorage.key(i).split(\"_\").pop()\n  //       const getCart = useCart(shopId)\n  //       setCartCollection({[shopId]: getCart})\n  //     }\n  //   }\n  //\n  //   Object.keys(cartCollection.shop).map((key, index) => {\n  //     cartCollection.shop[key]()?.items?.map((item) => {\n  //       setCartCollection({totalItemQuantity:  cartCollection.totalItemQuantity + 1});\n  //     })\n  //     setCartCollection({totalPrice: (cartCollection.shop[key]()?.checkout ?\n  //         cartCollection.shop[key]().checkout.summary.total.amount : 0) + cartCollection.totalPrice})\n  //   })\n  // }, [])\n  // console.log(cartCollection, \"GHATIA\")\n  var cartCollection = {\n    shop: {},\n    totalItemQuantity: 0,\n    totalPrice: 0\n  };\n\n  if (true) {\n    var anonymous_cart_ids = JSON.parse(localStorage.getItem(ANONYMOUS_CART_ID_KEY_NAME) || \"{}\"); // const tokens = JSON.parse(localStorage.getItem(ANONYMOUS_CART_TOKEN_KEY_NAME))\n\n    for (var shopId in anonymous_cart_ids) {\n      var cart = useCart(shopId);\n      cartCollection.shop[shopId] = cart;\n    }\n\n    Object.keys(cartCollection.shop).map(function (key, index) {\n      var _cartCollection$shop$, _cartCollection$shop$2, _cartCollection$shop$3, _cartCollection$shop$4, _cartCollection$shop$5;\n\n      (_cartCollection$shop$ = cartCollection.shop[key]) === null || _cartCollection$shop$ === void 0 ? void 0 : (_cartCollection$shop$2 = _cartCollection$shop$.cart) === null || _cartCollection$shop$2 === void 0 ? void 0 : (_cartCollection$shop$3 = _cartCollection$shop$2.items) === null || _cartCollection$shop$3 === void 0 ? void 0 : _cartCollection$shop$3.map(function (item) {\n        cartCollection.totalItemQuantity += 1;\n      });\n      cartCollection.totalPrice += ((_cartCollection$shop$4 = cartCollection.shop[key]) === null || _cartCollection$shop$4 === void 0 ? void 0 : (_cartCollection$shop$5 = _cartCollection$shop$4.cart) === null || _cartCollection$shop$5 === void 0 ? void 0 : _cartCollection$shop$5.checkout) ? cartCollection.shop[key].cart.checkout.summary.total.amount : 0;\n    });\n  }\n\n  console.log(cartCollection, \"GHATIA\");\n  return _objectSpread({}, cartCollection);\n}\n\n_s(useCarts, \"kj6vYOuuZe117C9BX73N0wcQ3Yk=\", false, function () {\n  return [useCart];\n});","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/hooks/cart/useCarts.tsx"],"names":["useCart","ANONYMOUS_CART_ID_KEY_NAME","ANONYMOUS_CART_TOKEN_KEY_NAME","useCarts","cartCollection","shop","totalItemQuantity","totalPrice","anonymous_cart_ids","JSON","parse","localStorage","getItem","shopId","cart","Object","keys","map","key","index","items","item","checkout","summary","total","amount","console","log"],"mappings":";;;;;;;;AAGA,OAAOA,OAAP,MAAoB,oBAApB;AACA,IAAMC,0BAA0B,GAAG,qBAAnC;AACA,IAAMC,6BAA6B,GAAG,wBAAtC;AAGA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIC,cAAc,GAAG;AACnBC,IAAAA,IAAI,EAAC,EADc;AAEnBC,IAAAA,iBAAiB,EAAE,CAFA;AAGnBC,IAAAA,UAAU,EAAE;AAHO,GAArB;;AAMA,YAAmC;AAEjC,QAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBX,0BAArB,KAAoD,IAA/D,CAA3B,CAFiC,CAGjC;;AAEA,SAAI,IAAMY,MAAV,IAAoBL,kBAApB,EAAuC;AACrC,UAAMM,IAAI,GAAGd,OAAO,CAACa,MAAD,CAApB;AACAT,MAAAA,cAAc,CAACC,IAAf,CAAoBQ,MAApB,IAA8BC,IAA9B;AACD;;AAEDC,IAAAA,MAAM,CAACC,IAAP,CAAYZ,cAAc,CAACC,IAA3B,EAAiCY,GAAjC,CAAqC,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAAA;;AACnD,+BAAAf,cAAc,CAACC,IAAf,CAAoBa,GAApB,2GAA0BJ,IAA1B,4GAAgCM,KAAhC,kFAAuCH,GAAvC,CAA2C,UAACI,IAAD,EAAU;AACnDjB,QAAAA,cAAc,CAACE,iBAAf,IAAoC,CAApC;AACD,OAFD;AAGAF,MAAAA,cAAc,CAACG,UAAf,IAA8B,2BAAAH,cAAc,CAACC,IAAf,CAAoBa,GAApB,6GAA0BJ,IAA1B,kFAAgCQ,QAAhC,IAA2ClB,cAAc,CAACC,IAAf,CAAoBa,GAApB,EAAyBJ,IAAzB,CAA8BQ,QAA9B,CAAuCC,OAAvC,CAA+CC,KAA/C,CAAqDC,MAAhG,GAAyG,CAAvI;AACD,KALD;AAOD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYvB,cAAZ,EAA4B,QAA5B;AACA,2BACKA,cADL;AAGD;;GAvDuBD,Q;UAuCLH,O","sourcesContent":["import { useEffect, useMemo, useCallback, useState } from \"react\";\nimport { useQuery, useMutation, useApolloClient } from \"@apollo/client\";\nimport useStores from \"hooks/useStores\";\nimport useCart from \"hooks/cart/useCart\";\nconst ANONYMOUS_CART_ID_KEY_NAME = \"_ANONYMOUS_CART_ID_\";\nconst ANONYMOUS_CART_TOKEN_KEY_NAME = \"_ANONYMOUS_CART_TOKEN_\";\n\n\n/**\n * Hook to get all carts information\n *\n * @returns {Object} the user's current cart\n */\nexport default function useCarts() {\n  // const [cartCollection, setCartCollection] = useState({\n  //   shop:{},\n  //   totalItemQuantity: 0,\n  //   totalPrice: 0\n  // })\n  //\n  // useEffect(() => {\n  //\n  //   for (let i = 0; i < localStorage.length; i++) {\n  //     if (localStorage.key(i).substring(0, ANONYMOUS_CART_ID_KEY_NAME.length) == ANONYMOUS_CART_ID_KEY_NAME) {\n  //       const shopId = localStorage.key(i).split(\"_\").pop()\n  //       const getCart = useCart(shopId)\n  //       setCartCollection({[shopId]: getCart})\n  //     }\n  //   }\n  //\n  //   Object.keys(cartCollection.shop).map((key, index) => {\n  //     cartCollection.shop[key]()?.items?.map((item) => {\n  //       setCartCollection({totalItemQuantity:  cartCollection.totalItemQuantity + 1});\n  //     })\n  //     setCartCollection({totalPrice: (cartCollection.shop[key]()?.checkout ?\n  //         cartCollection.shop[key]().checkout.summary.total.amount : 0) + cartCollection.totalPrice})\n  //   })\n  // }, [])\n  // console.log(cartCollection, \"GHATIA\")\n\n  let cartCollection = {\n    shop:{},\n    totalItemQuantity: 0,\n    totalPrice: 0\n  }\n\n  if (typeof window !== 'undefined') {\n\n    const anonymous_cart_ids = JSON.parse(localStorage.getItem(ANONYMOUS_CART_ID_KEY_NAME) || \"{}\")\n    // const tokens = JSON.parse(localStorage.getItem(ANONYMOUS_CART_TOKEN_KEY_NAME))\n\n    for(const shopId in anonymous_cart_ids){\n      const cart = useCart(shopId)\n      cartCollection.shop[shopId] = cart\n    }\n\n    Object.keys(cartCollection.shop).map((key, index) => {\n      cartCollection.shop[key]?.cart?.items?.map((item) => {\n        cartCollection.totalItemQuantity += 1;\n      })\n      cartCollection.totalPrice += (cartCollection.shop[key]?.cart?.checkout ? cartCollection.shop[key].cart.checkout.summary.total.amount : 0)\n    })\n\n  }\n  console.log(cartCollection, \"GHATIA\")\n  return {\n    ...cartCollection\n  }\n}\n"]},"metadata":{},"sourceType":"module"}