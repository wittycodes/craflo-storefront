{"ast":null,"code":"import * as snippet from \"@segment/snippet\";\n/**\n * Dispatch tracking data to segment\n * @name dispatch\n * @ignore\n * @param {Object} data Arguments supplied by tracking library\n * @param {String} data.action String value used as the first param to analytics.track()\n * @returns {undefined} No Return\n */\n\nexport function dispatch(data) {\n  // Workaround for not being able to use object rest spread\n  const newData = Object.assign({}, data);\n  const {\n    action\n  } = newData;\n  delete newData.action;\n  window && window.analytics && window.analytics.track(action, newData);\n}\n/**\n * Render string script\n * @returns {String} String script to be included in the document head\n */\n\nexport function renderScript() {\n  const opts = {\n    apiKey: process.env.SEGMENT_ANALYTICS_WRITE_KEY,\n    page: true // Set this to `false` if you want to manually fire `analytics.page()` from within your pages.\n\n  };\n\n  if (process.env.SEGMENT_ANALYTICS_SKIP_MINIMIZE === true) {\n    return snippet.max(opts);\n  }\n\n  return snippet.min(opts);\n}","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/custom/analytics/segment.tsx"],"names":["snippet","dispatch","data","newData","Object","assign","action","window","analytics","track","renderScript","opts","apiKey","process","env","SEGMENT_ANALYTICS_WRITE_KEY","page","SEGMENT_ANALYTICS_SKIP_MINIMIZE","max","min"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B;AACA,QAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,CAAhB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAaH,OAAnB;AACA,SAAOA,OAAO,CAACG,MAAf;AAEAC,EAAAA,MAAM,IAAIA,MAAM,CAACC,SAAjB,IAA8BD,MAAM,CAACC,SAAP,CAAiBC,KAAjB,CAAuBH,MAAvB,EAA+BH,OAA/B,CAA9B;AACD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASO,YAAT,GAAwB;AAC7B,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,2BADT;AAEXC,IAAAA,IAAI,EAAE,IAFK,CAEA;;AAFA,GAAb;;AAKA,MAAIH,OAAO,CAACC,GAAR,CAAYG,+BAAZ,KAAgD,IAApD,EAA0D;AACxD,WAAOjB,OAAO,CAACkB,GAAR,CAAYP,IAAZ,CAAP;AACD;;AAED,SAAOX,OAAO,CAACmB,GAAR,CAAYR,IAAZ,CAAP;AACD","sourcesContent":["import * as snippet from \"@segment/snippet\";\n\n/**\n * Dispatch tracking data to segment\n * @name dispatch\n * @ignore\n * @param {Object} data Arguments supplied by tracking library\n * @param {String} data.action String value used as the first param to analytics.track()\n * @returns {undefined} No Return\n */\nexport function dispatch(data) {\n  // Workaround for not being able to use object rest spread\n  const newData = Object.assign({}, data);\n  const { action } = newData;\n  delete newData.action;\n\n  window && window.analytics && window.analytics.track(action, newData);\n}\n\n/**\n * Render string script\n * @returns {String} String script to be included in the document head\n */\nexport function renderScript() {\n  const opts = {\n    apiKey: process.env.SEGMENT_ANALYTICS_WRITE_KEY,\n    page: true // Set this to `false` if you want to manually fire `analytics.page()` from within your pages.\n  };\n\n  if (process.env.SEGMENT_ANALYTICS_SKIP_MINIMIZE === true) {\n    return snippet.max(opts);\n  }\n\n  return snippet.min(opts);\n}\n"]},"metadata":{},"sourceType":"module"}