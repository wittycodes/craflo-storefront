{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/reaction/components/NavigationDesktop/NavigationItemDesktop.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport inject from \"hocs/inject\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popover from \"@material-ui/core/Popover\";\nimport ChevronDownIcon from \"mdi-material-ui/ChevronDown\";\nimport ChevronRight from \"mdi-material-ui/ChevronRight\";\nimport ChevronUpIcon from \"mdi-material-ui/ChevronUp\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Router from \"translations/i18nRouter\";\nimport Link from \"components/Link\";\n\nvar styles = function styles(theme) {\n  return {\n    popover: {\n      left: \"0!important\",\n      maxWidth: \"100vw\",\n      padding: theme.spacing(2),\n      width: \"100vw\"\n    },\n    grid: {\n      width: \"100vw\"\n    },\n    navigationShopAllLink: {\n      display: \"flex\",\n      textDecoration: \"underline\",\n      fontSize: \"14px\",\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(2),\n      fontFamily: theme.typography.fontFamily\n    },\n    navigationShopAllLinkIcon: {\n      fontSize: \"12px\"\n    },\n    primaryNavItem: {\n      textTransform: \"capitalize\"\n    }\n  };\n};\n\nvar NavigationItemDesktop = /*#__PURE__*/function (_Component) {\n  _inherits(NavigationItemDesktop, _Component);\n\n  var _super = _createSuper(NavigationItemDesktop);\n\n  function NavigationItemDesktop() {\n    var _this;\n\n    _classCallCheck(this, NavigationItemDesktop);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isSubNavOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"linkPath\", function (providedNavItem) {\n      var _this$props = _this.props,\n          navItem = _this$props.navItem,\n          routingStore = _this$props.routingStore;\n      var currentNavItem = providedNavItem && providedNavItem.navigationItem || navItem.navigationItem;\n      return routingStore.queryString !== \"\" ? \"\".concat(currentNavItem.data.url, \"?\").concat(routingStore.queryString) : \"\".concat(currentNavItem.data.url);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      event.preventDefault();\n\n      if (_this.hasSubNavItems) {\n        _this.setState({\n          isSubNavOpen: !_this.state.isSubNavOpen\n        });\n      } else {\n        var path = _this.linkPath();\n\n        Router.push(path);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClose\", function () {\n      _this.setState({\n        isSubNavOpen: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(NavigationItemDesktop, [{\n    key: \"renderSubNav\",\n    value: function renderSubNav(navItemGroup) {\n      var _this2 = this;\n\n      var menuItems = navItemGroup.items.map(function (item, index) {\n        var _item$navigationItem$ = item.navigationItem.data,\n            contentForLanguage = _item$navigationItem$.contentForLanguage,\n            navigationItemClassNames = _item$navigationItem$.classNames,\n            isUrlRelative = _item$navigationItem$.isUrlRelative,\n            shouldOpenInNewWindow = _item$navigationItem$.shouldOpenInNewWindow;\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          dense: true,\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          className: navigationItemClassNames,\n          onClick: _this2.onClose,\n          route: _this2.linkPath(item),\n          href: _this2.linkPath(item),\n          isUrlAbsolute: !isUrlRelative,\n          shouldOpenInNewWindow: shouldOpenInNewWindow,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ListItemText, {\n          primary: contentForLanguage,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        })));\n      });\n      menuItems.unshift( /*#__PURE__*/React.createElement(Divider, {\n        key: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }\n      }));\n      return menuItems;\n    }\n  }, {\n    key: \"renderPopover\",\n    value: function renderPopover() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          navItem = _this$props2.navItem,\n          _this$props2$navItem = _this$props2.navItem,\n          items = _this$props2$navItem.items,\n          navigationItem = _this$props2$navItem.navigationItem;\n\n      if (items) {\n        return /*#__PURE__*/React.createElement(Popover, {\n          classes: {\n            paper: classes.popover\n          },\n          anchorReference: \"anchorPosition\",\n          anchorPosition: {\n            left: 0,\n            top: 64\n          },\n          elevation: 1,\n          onClose: this.onClose,\n          open: this.state.isSubNavOpen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          className: classes.grid,\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }\n        }, items.map(function (item, index) {\n          var _item$navigationItem$2 = item.navigationItem.data,\n              contentForLanguage = _item$navigationItem$2.contentForLanguage,\n              navigationItemClassNames = _item$navigationItem$2.classNames,\n              isUrlRelative = _item$navigationItem$2.isUrlRelative,\n              shouldOpenInNewWindow = _item$navigationItem$2.shouldOpenInNewWindow;\n          return /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            key: index,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(MenuList, {\n            disablePadding: true,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            className: navigationItemClassNames,\n            href: _this3.linkPath(item),\n            isUrlAbsolute: !isUrlRelative,\n            onClick: _this3.onClose,\n            shouldOpenInNewWindow: shouldOpenInNewWindow,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(ListItemText, {\n            primary: contentForLanguage,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }\n          }))), Array.isArray(item.items) && _this3.renderSubNav(item)));\n        })), /*#__PURE__*/React.createElement(Link, {\n          className: classes.navigationShopAllLink,\n          onClick: this.onClose,\n          route: this.linkPath(navItem),\n          href: this.linkPath(navItem),\n          isUrlAbsolute: !navigationItem.data.isUrlRelative,\n          shouldOpenInNewWindow: navigationItem.data.shouldOpenInNewWindow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }\n        }, \"Shop all \", navigationItem.data.contentForLanguage, \" \", /*#__PURE__*/React.createElement(ChevronRight, {\n          className: classes.navigationShopAllLinkIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 69\n          }\n        }))));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          primaryNavItem = _this$props3.classes.primaryNavItem,\n          navItem = _this$props3.navItem,\n          navigationItem = _this$props3.navItem.navigationItem;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: classNames(primaryNavItem, navigationItem.data.classNames),\n        color: \"inherit\",\n        onClick: this.onClick,\n        href: this.linkPath(navItem),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, navigationItem.data.contentForLanguage, this.hasSubNavItems && /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 35\n        }\n      }, this.state.isSubNavOpen ? /*#__PURE__*/React.createElement(ChevronUpIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 72\n        }\n      }) : /*#__PURE__*/React.createElement(ChevronDownIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 92\n        }\n      }))), this.hasSubNavItems && this.renderPopover());\n    }\n  }, {\n    key: \"hasSubNavItems\",\n    get: function get() {\n      var items = this.props.navItem.items;\n      return Array.isArray(items) && items.length > 0;\n    }\n  }]);\n\n  return NavigationItemDesktop;\n}(Component);\n\n_defineProperty(NavigationItemDesktop, \"propTypes\", {\n  classes: PropTypes.object,\n  navItem: PropTypes.object,\n  routingStore: PropTypes.object\n});\n\n_defineProperty(NavigationItemDesktop, \"defaultProps\", {\n  classes: {},\n  navItem: {},\n  routingStore: {}\n});\n\nexport default withStyles(styles)(inject(\"routingStore\")(NavigationItemDesktop));","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/components/NavigationDesktop/NavigationItemDesktop.tsx"],"names":["React","Component","Fragment","PropTypes","inject","classNames","Button","Divider","Grid","ListItemText","MenuList","MenuItem","Popover","ChevronDownIcon","ChevronRight","ChevronUpIcon","withStyles","Router","Link","styles","theme","popover","left","maxWidth","padding","spacing","width","grid","navigationShopAllLink","display","textDecoration","fontSize","marginTop","marginBottom","fontFamily","typography","navigationShopAllLinkIcon","primaryNavItem","textTransform","NavigationItemDesktop","isSubNavOpen","providedNavItem","props","navItem","routingStore","currentNavItem","navigationItem","queryString","data","url","event","preventDefault","hasSubNavItems","setState","state","path","linkPath","push","navItemGroup","menuItems","items","map","item","index","contentForLanguage","navigationItemClassNames","isUrlRelative","shouldOpenInNewWindow","onClose","unshift","classes","paper","top","Array","isArray","renderSubNav","onClick","renderPopover","length","object"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport inject from \"hocs/inject\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popover from \"@material-ui/core/Popover\";\nimport ChevronDownIcon from \"mdi-material-ui/ChevronDown\";\nimport ChevronRight from \"mdi-material-ui/ChevronRight\";\nimport ChevronUpIcon from \"mdi-material-ui/ChevronUp\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Router from \"translations/i18nRouter\";\nimport Link from \"components/Link\";\n\nconst styles = (theme) => ({\n  popover: {\n    left: \"0!important\",\n    maxWidth: \"100vw\",\n    padding: theme.spacing(2),\n    width: \"100vw\"\n  },\n  grid: {\n    width: \"100vw\"\n  },\n  navigationShopAllLink: {\n    display: \"flex\",\n    textDecoration: \"underline\",\n    fontSize: \"14px\",\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(2),\n    fontFamily: theme.typography.fontFamily\n  },\n  navigationShopAllLinkIcon: {\n    fontSize: \"12px\"\n  },\n  primaryNavItem: {\n    textTransform: \"capitalize\"\n  }\n});\n\nclass NavigationItemDesktop extends Component {\n  static propTypes = {\n    classes: PropTypes.object,\n    navItem: PropTypes.object,\n    routingStore: PropTypes.object\n  };\n\n  static defaultProps = {\n    classes: {},\n    navItem: {},\n    routingStore: {}\n  };\n\n  state = { isSubNavOpen: false };\n\n  linkPath = (providedNavItem) => {\n    const { navItem, routingStore } = this.props;\n\n    const currentNavItem = (providedNavItem && providedNavItem.navigationItem) || navItem.navigationItem;\n\n    return routingStore.queryString !== \"\"\n      ? `${currentNavItem.data.url}?${routingStore.queryString}`\n      : `${currentNavItem.data.url}`;\n  }\n\n  get hasSubNavItems() {\n    const { navItem: { items } } = this.props;\n    return Array.isArray(items) && items.length > 0;\n  }\n\n  onClick = (event) => {\n    event.preventDefault();\n\n    if (this.hasSubNavItems) {\n      this.setState({ isSubNavOpen: !this.state.isSubNavOpen });\n    } else {\n      const path = this.linkPath();\n      Router.push(path);\n    }\n  };\n\n  onClose = () => {\n    this.setState({ isSubNavOpen: false });\n  };\n\n  renderSubNav(navItemGroup) {\n    const menuItems = navItemGroup.items.map((item, index) => {\n      const { navigationItem: { data: { contentForLanguage, classNames: navigationItemClassNames, isUrlRelative, shouldOpenInNewWindow } } } = item;\n      return (\n        <MenuItem dense key={index}>\n          <Link\n            className={navigationItemClassNames}\n            onClick={this.onClose}\n            route={this.linkPath(item)}\n            href={this.linkPath(item)}\n            isUrlAbsolute={!isUrlRelative}\n            shouldOpenInNewWindow={shouldOpenInNewWindow}\n          >\n            <ListItemText primary={contentForLanguage} />\n          </Link>\n        </MenuItem>\n      );\n    });\n\n    menuItems.unshift(<Divider key=\"divider\" />);\n\n    return menuItems;\n  }\n\n  renderPopover() {\n    const { classes, navItem, navItem: { items, navigationItem } } = this.props;\n\n    if (items) {\n      return (\n        <Popover\n          classes={{ paper: classes.popover }}\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{ left: 0, top: 64 }}\n          elevation={1}\n          onClose={this.onClose}\n          open={this.state.isSubNavOpen}\n        >\n          <Grid container className={classes.grid} spacing={2}>\n            {items.map((item, index) => {\n              const { navigationItem: { data: { contentForLanguage, classNames: navigationItemClassNames, isUrlRelative, shouldOpenInNewWindow } } } = item;\n              return (\n                <Grid item key={index}>\n                  <MenuList disablePadding>\n                    <MenuItem>\n                      <Link\n                        className={navigationItemClassNames}\n                        href={this.linkPath(item)}\n                        isUrlAbsolute={!isUrlRelative}\n                        onClick={this.onClose}\n                        shouldOpenInNewWindow={shouldOpenInNewWindow}\n                      >\n                        <ListItemText primary={contentForLanguage} />\n                      </Link>\n                    </MenuItem>\n                    {Array.isArray(item.items) && this.renderSubNav(item)}\n                  </MenuList>\n                </Grid>\n              );\n            })}\n          </Grid>\n          <Link\n            className={classes.navigationShopAllLink}\n            onClick={this.onClose}\n            route={this.linkPath(navItem)}\n            href={this.linkPath(navItem)}\n            isUrlAbsolute={!navigationItem.data.isUrlRelative}\n            shouldOpenInNewWindow={navigationItem.data.shouldOpenInNewWindow}\n          >\n            <span>Shop all {navigationItem.data.contentForLanguage} <ChevronRight className={classes.navigationShopAllLinkIcon} /></span>\n          </Link>\n        </Popover>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const { classes: { primaryNavItem }, navItem, navItem: { navigationItem } } = this.props;\n\n    return (\n      <Fragment>\n        <Button className={classNames(primaryNavItem, navigationItem.data.classNames)} color=\"inherit\" onClick={this.onClick} href={this.linkPath(navItem)}>\n          {navigationItem.data.contentForLanguage}\n          {this.hasSubNavItems && <Fragment>{this.state.isSubNavOpen ? <ChevronUpIcon /> : <ChevronDownIcon />}</Fragment>}\n        </Button>\n        {this.hasSubNavItems && this.renderPopover()}\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(inject(\"routingStore\")(NavigationItemDesktop));\n"]},"metadata":{},"sourceType":"module"}