{"ast":null,"code":"var _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/reaction/context/UIContext.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PAGE_SIZES, inPageSizes } from \"lib/utils/pageSizes\";\nexport const UIContext = /*#__PURE__*/createContext({});\nexport const UIProvider = ({\n  children\n}) => {\n  const {\n    0: isCartOpen,\n    1: setIsCartOpen\n  } = useState(false);\n  const {\n    0: isMenuDrawerOpen,\n    1: setIsMenuDrawerOpen\n  } = useState(false);\n  const {\n    0: isFilterDrawerOpen,\n    1: setIsFilterDrawerOpen\n  } = useState(false);\n  const {\n    0: language,\n    1: setLanguage\n  } = useState(\"en\");\n  const {\n    0: locales,\n    1: setLocales\n  } = useState({});\n  const {\n    0: orderStatusQuery,\n    1: setOrderStatusQuery\n  } = useState([]);\n  const {\n    0: orderQueryLimit,\n    1: setOrderQueryLimit\n  } = useState(5); // eslint-disable-line no-unused-vars\n\n  const {\n    0: pageSize,\n    1: _setPageSize\n  } = useState(PAGE_SIZES._20);\n  const {\n    0: pdpSelectedOptionId,\n    1: setPdpSelectedOptionId\n  } = useState(null);\n  const {\n    0: pdpSelectedVariantId,\n    1: setPdpSelectedVariantId\n  } = useState(null);\n  const {\n    0: sortBy,\n    1: setSortBy\n  } = useState(\"updatedAt-desc\");\n  const {\n    0: sortByCurrencyCode,\n    1: setSortByCurrencyCode\n  } = useState(\"USD\"); // eslint-disable-line no-unused-vars\n\n  const {\n    0: openCartTimeout,\n    1: setOpenCartTimeout\n  } = useState();\n\n  const setPDPSelectedVariantId = (variantId, optionId) => {\n    setPdpSelectedVariantId(variantId);\n    setPdpSelectedOptionId(optionId);\n  };\n\n  const clearOpenCartTimeout = () => {\n    openCartTimeout && clearTimeout(openCartTimeout);\n  };\n\n  const openCart = () => {\n    setIsCartOpen(true);\n    clearOpenCartTimeout();\n  };\n\n  const closeCart = (delay = 500) => {\n    const newTimeout = setTimeout(() => {\n      setIsCartOpen(false);\n      clearOpenCartTimeout();\n    }, delay);\n    setOpenCartTimeout(newTimeout);\n  };\n\n  const openCartWithTimeout = (delay = 3000) => {\n    openCart();\n    const newTimeout = setTimeout(() => {\n      setIsCartOpen(false);\n      clearOpenCartTimeout();\n    }, delay);\n    setOpenCartTimeout(newTimeout);\n  };\n\n  const toggleCartOpen = () => {\n    setIsCartOpen(!isCartOpen);\n  };\n\n  const closeMenuDrawer = () => {\n    setIsMenuDrawerOpen(false);\n  };\n\n  const toggleMenuDrawerOpen = () => {\n    setIsMenuDrawerOpen(!isMenuDrawerOpen);\n  };\n\n  const closeFilterDrawer = () => {\n    setIsFilterDrawerOpen(false);\n  };\n\n  const toggleFilterDrawerOpen = () => {\n    setIsFilterDrawerOpen(!isFilterDrawerOpen);\n  };\n\n  const setOrderStatusSelectValue = orderStatus => {\n    setOrderStatusQuery(orderStatus);\n  };\n\n  const setPageSize = size => {\n    // Validate page size\n    _setPageSize(inPageSizes(size) ? size : PAGE_SIZES._20);\n  };\n\n  return /*#__PURE__*/React.createElement(UIContext.Provider, {\n    value: {\n      isCartOpen,\n      isMenuDrawerOpen,\n      isFilterDrawerOpen,\n      language,\n      locales,\n      orderStatusQuery,\n      orderQueryLimit,\n      pageSize,\n      pdpSelectedOptionId,\n      pdpSelectedVariantId,\n      sortBy,\n      sortByCurrencyCode,\n      setLocales,\n      setPDPSelectedVariantId,\n      setLanguage,\n      openCart,\n      closeCart,\n      openCartWithTimeout,\n      toggleCartOpen,\n      closeMenuDrawer,\n      toggleMenuDrawerOpen,\n      closeFilterDrawer,\n      toggleFilterDrawerOpen,\n      setOrderStatusSelectValue,\n      setPageSize,\n      setSortBy\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, children);\n};\nUIProvider.propTypes = {\n  children: PropTypes.node\n};","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/context/UIContext.tsx"],"names":["createContext","useState","PropTypes","PAGE_SIZES","inPageSizes","UIContext","UIProvider","children","isCartOpen","setIsCartOpen","isMenuDrawerOpen","setIsMenuDrawerOpen","isFilterDrawerOpen","setIsFilterDrawerOpen","language","setLanguage","locales","setLocales","orderStatusQuery","setOrderStatusQuery","orderQueryLimit","setOrderQueryLimit","pageSize","_setPageSize","_20","pdpSelectedOptionId","setPdpSelectedOptionId","pdpSelectedVariantId","setPdpSelectedVariantId","sortBy","setSortBy","sortByCurrencyCode","setSortByCurrencyCode","openCartTimeout","setOpenCartTimeout","setPDPSelectedVariantId","variantId","optionId","clearOpenCartTimeout","clearTimeout","openCart","closeCart","delay","newTimeout","setTimeout","openCartWithTimeout","toggleCartOpen","closeMenuDrawer","toggleMenuDrawerOpen","closeFilterDrawer","toggleFilterDrawerOpen","setOrderStatusSelectValue","orderStatus","setPageSize","size","propTypes","node"],"mappings":"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","sourcesContent":["import { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PAGE_SIZES, inPageSizes } from \"lib/utils/pageSizes\";\n\nexport const UIContext = createContext({} as any);\n\nexport const UIProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [isMenuDrawerOpen, setIsMenuDrawerOpen] = useState(false);\n  const [isFilterDrawerOpen, setIsFilterDrawerOpen] = useState(false);\n\n  const [language, setLanguage] = useState(\"en\");\n  const [locales, setLocales] = useState({});\n  const [orderStatusQuery, setOrderStatusQuery] = useState([]);\n  const [orderQueryLimit, setOrderQueryLimit] = useState(5); // eslint-disable-line no-unused-vars\n  const [pageSize, _setPageSize] = useState(PAGE_SIZES._20);\n  const [pdpSelectedOptionId, setPdpSelectedOptionId] = useState(null);\n  const [pdpSelectedVariantId, setPdpSelectedVariantId] = useState(null);\n  const [sortBy, setSortBy] = useState(\"updatedAt-desc\");\n  const [sortByCurrencyCode, setSortByCurrencyCode] = useState(\"USD\"); // eslint-disable-line no-unused-vars\n  const [openCartTimeout, setOpenCartTimeout] = useState();\n\n  const setPDPSelectedVariantId = (variantId, optionId) => {\n    setPdpSelectedVariantId(variantId);\n    setPdpSelectedOptionId(optionId);\n  };\n\n  const clearOpenCartTimeout = () => {\n    openCartTimeout && clearTimeout(openCartTimeout);\n  };\n\n  const openCart = () => {\n    setIsCartOpen(true);\n    clearOpenCartTimeout();\n  };\n\n  const closeCart = (delay = 500) => {\n    const newTimeout = setTimeout(() => {\n      setIsCartOpen(false);\n      clearOpenCartTimeout();\n    }, delay);\n    setOpenCartTimeout(newTimeout);\n  };\n\n  const openCartWithTimeout = (delay = 3000) => {\n    openCart();\n\n    const newTimeout = setTimeout(() => {\n      setIsCartOpen(false);\n      clearOpenCartTimeout();\n    }, delay);\n\n    setOpenCartTimeout(newTimeout);\n  };\n\n  const toggleCartOpen = () => {\n    setIsCartOpen(!isCartOpen);\n  };\n\n  const closeMenuDrawer = () => {\n    setIsMenuDrawerOpen(false);\n  };\n\n  const toggleMenuDrawerOpen = () => {\n    setIsMenuDrawerOpen(!isMenuDrawerOpen);\n  };\n\n\n  const closeFilterDrawer = () => {\n    setIsFilterDrawerOpen(false);\n  };\n\n  const toggleFilterDrawerOpen = () => {\n    setIsFilterDrawerOpen(!isFilterDrawerOpen);\n  };\n\n  const setOrderStatusSelectValue = (orderStatus) => {\n    setOrderStatusQuery(orderStatus);\n  };\n\n  const setPageSize = (size) => {\n    // Validate page size\n    _setPageSize(inPageSizes(size) ? size : PAGE_SIZES._20);\n  };\n\n  return (\n    <UIContext.Provider value={{\n      isCartOpen,\n      isMenuDrawerOpen,\n      isFilterDrawerOpen,\n      language,\n      locales,\n      orderStatusQuery,\n      orderQueryLimit,\n      pageSize,\n      pdpSelectedOptionId,\n      pdpSelectedVariantId,\n      sortBy,\n      sortByCurrencyCode,\n      setLocales,\n      setPDPSelectedVariantId,\n      setLanguage,\n      openCart,\n      closeCart,\n      openCartWithTimeout,\n      toggleCartOpen,\n      closeMenuDrawer,\n      toggleMenuDrawerOpen,\n      closeFilterDrawer,\n      toggleFilterDrawerOpen,\n      setOrderStatusSelectValue,\n      setPageSize,\n      setSortBy\n    }}\n    >\n      {children}\n    </UIContext.Provider>\n  );\n};\n\nUIProvider.propTypes = {\n  children: PropTypes.node\n};\n"]},"metadata":{},"sourceType":"module"}