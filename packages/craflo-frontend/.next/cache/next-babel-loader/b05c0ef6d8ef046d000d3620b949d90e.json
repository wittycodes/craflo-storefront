{"ast":null,"code":"import passportMiddleware from \"apiUtils/passportMiddleware\";\n\nconst token = async (req, res) => {\n  req.session.redirectTo = req.headers.Referer;\n\n  if (req.session && req.session.passport) {\n    try {\n      const user = JSON.parse(req.session.passport.user);\n      const {\n        accessToken\n      } = user;\n\n      if (!accessToken) {\n        return res.status(500).send(\"User is missing credentials\");\n      }\n\n      return res.status(200).send(JSON.stringify({\n        accessToken\n      }));\n    } catch (error) {\n      return res.status(500).send(error);\n    }\n  }\n\n  return res.status(401).send(JSON.stringify({\n    error: \"No authorization data present\"\n  }));\n};\n\nexport default passportMiddleware(token);","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/pages/api/account/token.tsx"],"names":["passportMiddleware","token","req","res","session","redirectTo","headers","Referer","passport","user","JSON","parse","accessToken","status","send","stringify","error"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,6BAA/B;;AAEA,MAAMC,KAAK,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChCD,EAAAA,GAAG,CAACE,OAAJ,CAAYC,UAAZ,GAAyBH,GAAG,CAACI,OAAJ,CAAYC,OAArC;;AACA,MAAIL,GAAG,CAACE,OAAJ,IAAeF,GAAG,CAACE,OAAJ,CAAYI,QAA/B,EAAyC;AACvC,QAAI;AACF,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACE,OAAJ,CAAYI,QAAZ,CAAqBC,IAAhC,CAAb;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAkBH,IAAxB;;AAEA,UAAI,CAACG,WAAL,EAAkB;AAChB,eAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,6BAArB,CAAP;AACD;;AAED,aAAOX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAAI,CAACK,SAAL,CAAe;AAAEH,QAAAA;AAAF,OAAf,CAArB,CAAP;AACD,KATD,CASE,OAAOI,KAAP,EAAc;AACd,aAAOb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,KAArB,CAAP;AACD;AACF;;AAED,SAAOb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,IAAI,CAACK,SAAL,CAAe;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf,CAArB,CAAP;AACD,CAlBD;;AAoBA,eAAehB,kBAAkB,CAACC,KAAD,CAAjC","sourcesContent":["import passportMiddleware from \"apiUtils/passportMiddleware\";\n\nconst token = async (req, res) => {\n  req.session.redirectTo = req.headers.Referer;\n  if (req.session && req.session.passport) {\n    try {\n      const user = JSON.parse(req.session.passport.user);\n      const { accessToken } = user;\n\n      if (!accessToken) {\n        return res.status(500).send(\"User is missing credentials\");\n      }\n\n      return res.status(200).send(JSON.stringify({ accessToken }));\n    } catch (error) {\n      return res.status(500).send(error);\n    }\n  }\n\n  return res.status(401).send(JSON.stringify({ error: \"No authorization data present\" }));\n};\n\nexport default passportMiddleware(token);\n"]},"metadata":{},"sourceType":"module"}