{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright Paperbits. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file and at https://paperbits.io/license/mit.\n */\nimport { ClickCounterModel } from \"./clickCounterModel\";\nexport let ClickCounterHandlers = /*#__PURE__*/function () {\n  function ClickCounterHandlers() {\n    _classCallCheck(this, ClickCounterHandlers);\n  }\n\n  _createClass(ClickCounterHandlers, [{\n    key: \"getWidgetOrder\",\n    value: async function getWidgetOrder() {\n      const widgetOrder = {\n        name: \"header\",\n        displayName: \"Header\",\n        iconClass: \"paperbits-puzzle-10\",\n        requires: [\"html\", \"js\"],\n        createModel: async () => {\n          return new ClickCounterModel();\n        }\n      };\n      return widgetOrder;\n    }\n  }]);\n\n  return ClickCounterHandlers;\n}();","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/paperbits/src/components/header/clickCounterHandlers.ts"],"names":["ClickCounterModel","ClickCounterHandlers","widgetOrder","name","displayName","iconClass","requires","createModel"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,iBAAT,QAAkC,qBAAlC;AAGA,WAAaC,oBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2CACyD;AACjD,YAAMC,WAAyB,GAAG;AAC9BC,QAAAA,IAAI,EAAE,QADwB;AAE9BC,QAAAA,WAAW,EAAE,QAFiB;AAG9BC,QAAAA,SAAS,EAAE,qBAHmB;AAI9BC,QAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,IAAT,CAJoB;AAK9BC,QAAAA,WAAW,EAAE,YAAY;AACrB,iBAAO,IAAIP,iBAAJ,EAAP;AACH;AAP6B,OAAlC;AAUA,aAAOE,WAAP;AACH;AAbL;;AAAA;AAAA","sourcesContent":["/**\n * @license\n * Copyright Paperbits. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file and at https://paperbits.io/license/mit.\n */\n\nimport { IWidgetOrder, IWidgetHandler } from \"@paperbits/common/editing\";\nimport { ClickCounterModel } from \"./clickCounterModel\";\n\n\nexport class ClickCounterHandlers implements IWidgetHandler {\n    public async getWidgetOrder(): Promise<IWidgetOrder> {\n        const widgetOrder: IWidgetOrder = {\n            name: \"header\",\n            displayName: \"Header\",\n            iconClass: \"paperbits-puzzle-10\",\n            requires: [\"html\", \"js\"],\n            createModel: async () => {\n                return new ClickCounterModel();\n            }\n        };\n\n        return widgetOrder;\n    }\n}"]},"metadata":{},"sourceType":"module"}