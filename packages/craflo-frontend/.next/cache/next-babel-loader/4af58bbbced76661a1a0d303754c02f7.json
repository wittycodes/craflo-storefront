{"ast":null,"code":"/**\n * Find a variant by _id\n *\n * @param {Array} variants - A list of variants\n * @param {String} variantId - _id of target variant\n * @returns {Object} - target variant or null if none found.\n */\nexport default function variantById(variants, variantId) {\n  const _variant = Array.isArray(variants) && variants.find(variant => variant._id === variantId);\n\n  return _variant || null;\n}","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/lib/utils/variantById.tsx"],"names":["variantById","variants","variantId","_variant","Array","isArray","find","variant","_id"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,WAAT,CAAqBC,QAArB,EAA+BC,SAA/B,EAA0C;AACvD,QAAMC,QAAQ,GAAGC,KAAK,CAACC,OAAN,CAAcJ,QAAd,KAA2BA,QAAQ,CAACK,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBN,SAA3C,CAA5C;;AAEA,SAAOC,QAAQ,IAAI,IAAnB;AACD","sourcesContent":["/**\n * Find a variant by _id\n *\n * @param {Array} variants - A list of variants\n * @param {String} variantId - _id of target variant\n * @returns {Object} - target variant or null if none found.\n */\nexport default function variantById(variants, variantId) {\n  const _variant = Array.isArray(variants) && variants.find((variant) => variant._id === variantId);\n\n  return _variant || null;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}