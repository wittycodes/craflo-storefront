{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/reaction/components/NavigationDesktop/NavigationDesktop.tsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport inject from \"hocs/inject\";\nimport { NavigationItemDesktop } from \"components/NavigationDesktop\";\n\nlet NavigationDesktop = /*#__PURE__*/function (_Component) {\n  _inherits(NavigationDesktop, _Component);\n\n  var _super = _createSuper(NavigationDesktop);\n\n  function NavigationDesktop() {\n    _classCallCheck(this, NavigationDesktop);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NavigationDesktop, [{\n    key: \"renderNavItem\",\n    value: function renderNavItem(navItem, index) {\n      return /*#__PURE__*/React.createElement(NavigationItemDesktop, {\n        key: index,\n        navItem: navItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 12\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      const {\n        navItems\n      } = this.props;\n\n      if (navItems && navItems.items) {\n        return /*#__PURE__*/React.createElement(\"nav\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 14\n          },\n          __self: this\n        }, navItems.items.map(this.renderNavItem));\n      } // If navItems.items aren't available, skip rendering of navigation\n\n\n      return null;\n    }\n  }]);\n\n  return NavigationDesktop;\n}(Component);\n\n_defineProperty(NavigationDesktop, \"propTypes\", {\n  classes: PropTypes.object,\n  navItems: PropTypes.object\n});\n\n_defineProperty(NavigationDesktop, \"defaultProps\", {\n  classes: {},\n  navItems: {}\n});\n\nexport default inject(\"navItems\")(NavigationDesktop);","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/components/NavigationDesktop/NavigationDesktop.tsx"],"names":["React","Component","PropTypes","inject","NavigationItemDesktop","NavigationDesktop","navItem","index","navItems","props","items","map","renderNavItem","classes","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,qBAAT,QAAsC,8BAAtC;;IAEMC,iB;;;;;;;;;;;;;kCAWUC,O,EAASC,K,EAAO;AAC5B,0BAAO,oBAAC,qBAAD;AAAuB,QAAA,GAAG,EAAEA,KAA5B;AAAmC,QAAA,OAAO,EAAED,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;6BAEQ;AACP,YAAM;AAAEE,QAAAA;AAAF,UAAe,KAAKC,KAA1B;;AAEA,UAAID,QAAQ,IAAIA,QAAQ,CAACE,KAAzB,EAAgC;AAC9B,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMF,QAAQ,CAACE,KAAT,CAAeC,GAAf,CAAmB,KAAKC,aAAxB,CAAN,CAAP;AACD,OALM,CAOP;;;AACA,aAAO,IAAP;AACD;;;;EAxB6BX,S;;gBAA1BI,iB,eACe;AACjBQ,EAAAA,OAAO,EAAEX,SAAS,CAACY,MADF;AAEjBN,EAAAA,QAAQ,EAAEN,SAAS,CAACY;AAFH,C;;gBADfT,iB,kBAMkB;AACpBQ,EAAAA,OAAO,EAAE,EADW;AAEpBL,EAAAA,QAAQ,EAAE;AAFU,C;;AAqBxB,eAAeL,MAAM,CAAC,UAAD,CAAN,CAAmBE,iBAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport inject from \"hocs/inject\";\n\nimport { NavigationItemDesktop } from \"components/NavigationDesktop\";\n\nclass NavigationDesktop extends Component {\n  static propTypes = {\n    classes: PropTypes.object,\n    navItems: PropTypes.object\n  };\n\n  static defaultProps = {\n    classes: {},\n    navItems: {}\n  };\n\n  renderNavItem(navItem, index) {\n    return <NavigationItemDesktop key={index} navItem={navItem} />;\n  }\n\n  render() {\n    const { navItems } = this.props;\n\n    if (navItems && navItems.items) {\n      return <nav>{navItems.items.map(this.renderNavItem)}</nav>;\n    }\n\n    // If navItems.items aren't available, skip rendering of navigation\n    return null;\n  }\n}\n\nexport default inject(\"navItems\")(NavigationDesktop);\n"]},"metadata":{},"sourceType":"module"}