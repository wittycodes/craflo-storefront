{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/reaction/components/NavigationDesktop/NavigationItemDesktop.tsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport inject from \"hocs/inject\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popover from \"@material-ui/core/Popover\";\nimport ChevronDownIcon from \"mdi-material-ui/ChevronDown\";\nimport ChevronRight from \"mdi-material-ui/ChevronRight\";\nimport ChevronUpIcon from \"mdi-material-ui/ChevronUp\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Router from \"translations/i18nRouter\";\nimport Link from \"components/Link\";\n\nconst styles = theme => ({\n  popover: {\n    left: \"0!important\",\n    maxWidth: \"100vw\",\n    padding: theme.spacing(2),\n    width: \"100vw\"\n  },\n  grid: {\n    width: \"100vw\"\n  },\n  navigationShopAllLink: {\n    display: \"flex\",\n    textDecoration: \"underline\",\n    fontSize: \"14px\",\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(2),\n    fontFamily: theme.typography.fontFamily\n  },\n  navigationShopAllLinkIcon: {\n    fontSize: \"12px\"\n  },\n  primaryNavItem: {\n    textTransform: \"capitalize\"\n  }\n});\n\nlet NavigationItemDesktop = /*#__PURE__*/function (_Component) {\n  _inherits(NavigationItemDesktop, _Component);\n\n  var _super = _createSuper(NavigationItemDesktop);\n\n  function NavigationItemDesktop(...args) {\n    var _this;\n\n    _classCallCheck(this, NavigationItemDesktop);\n\n    _this = _super.call(this, ...args);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isSubNavOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"linkPath\", providedNavItem => {\n      const {\n        navItem,\n        routingStore\n      } = _this.props;\n      const currentNavItem = providedNavItem && providedNavItem.navigationItem || navItem.navigationItem;\n      return routingStore.queryString !== \"\" ? `${currentNavItem.data.url}?${routingStore.queryString}` : `${currentNavItem.data.url}`;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", event => {\n      event.preventDefault();\n\n      if (_this.hasSubNavItems) {\n        _this.setState({\n          isSubNavOpen: !_this.state.isSubNavOpen\n        });\n      } else {\n        const path = _this.linkPath();\n\n        Router.push(path);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClose\", () => {\n      _this.setState({\n        isSubNavOpen: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(NavigationItemDesktop, [{\n    key: \"renderSubNav\",\n    value: function renderSubNav(navItemGroup) {\n      const menuItems = navItemGroup.items.map((item, index) => {\n        const {\n          navigationItem: {\n            data: {\n              contentForLanguage,\n              classNames: navigationItemClassNames,\n              isUrlRelative,\n              shouldOpenInNewWindow\n            }\n          }\n        } = item;\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          dense: true,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          },\n          __self: this\n        }, /*#__PURE__*/React.createElement(Link, {\n          className: navigationItemClassNames,\n          onClick: this.onClose,\n          route: this.linkPath(item),\n          href: this.linkPath(item),\n          isUrlAbsolute: !isUrlRelative,\n          shouldOpenInNewWindow: shouldOpenInNewWindow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          },\n          __self: this\n        }, /*#__PURE__*/React.createElement(ListItemText, {\n          primary: contentForLanguage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          },\n          __self: this\n        })));\n      });\n      menuItems.unshift( /*#__PURE__*/React.createElement(Divider, {\n        key: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        },\n        __self: this\n      }));\n      return menuItems;\n    }\n  }, {\n    key: \"renderPopover\",\n    value: function renderPopover() {\n      const {\n        classes,\n        navItem,\n        navItem: {\n          items,\n          navigationItem\n        }\n      } = this.props;\n\n      if (items) {\n        return /*#__PURE__*/React.createElement(Popover, {\n          classes: {\n            paper: classes.popover\n          },\n          anchorReference: \"anchorPosition\",\n          anchorPosition: {\n            left: 0,\n            top: 64\n          },\n          elevation: 1,\n          onClose: this.onClose,\n          open: this.state.isSubNavOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          },\n          __self: this\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          className: classes.grid,\n          spacing: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          },\n          __self: this\n        }, items.map((item, index) => {\n          const {\n            navigationItem: {\n              data: {\n                contentForLanguage,\n                classNames: navigationItemClassNames,\n                isUrlRelative,\n                shouldOpenInNewWindow\n              }\n            }\n          } = item;\n          return /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            },\n            __self: this\n          }, /*#__PURE__*/React.createElement(MenuList, {\n            disablePadding: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            },\n            __self: this\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            },\n            __self: this\n          }, /*#__PURE__*/React.createElement(Link, {\n            className: navigationItemClassNames,\n            href: this.linkPath(item),\n            isUrlAbsolute: !isUrlRelative,\n            onClick: this.onClose,\n            shouldOpenInNewWindow: shouldOpenInNewWindow,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 23\n            },\n            __self: this\n          }, /*#__PURE__*/React.createElement(ListItemText, {\n            primary: contentForLanguage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            },\n            __self: this\n          }))), Array.isArray(item.items) && this.renderSubNav(item)));\n        })), /*#__PURE__*/React.createElement(Link, {\n          className: classes.navigationShopAllLink,\n          onClick: this.onClose,\n          route: this.linkPath(navItem),\n          href: this.linkPath(navItem),\n          isUrlAbsolute: !navigationItem.data.isUrlRelative,\n          shouldOpenInNewWindow: navigationItem.data.shouldOpenInNewWindow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          },\n          __self: this\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          },\n          __self: this\n        }, \"Shop all \", navigationItem.data.contentForLanguage, \" \", /*#__PURE__*/React.createElement(ChevronRight, {\n          className: classes.navigationShopAllLinkIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 69\n          },\n          __self: this\n        }))));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      const {\n        classes: {\n          primaryNavItem\n        },\n        navItem,\n        navItem: {\n          navigationItem\n        }\n      } = this.props;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        },\n        __self: this\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: classNames(primaryNavItem, navigationItem.data.classNames),\n        color: \"inherit\",\n        onClick: this.onClick,\n        href: this.linkPath(navItem),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        },\n        __self: this\n      }, navigationItem.data.contentForLanguage, this.hasSubNavItems && /*#__PURE__*/React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 35\n        },\n        __self: this\n      }, this.state.isSubNavOpen ? /*#__PURE__*/React.createElement(ChevronUpIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 72\n        },\n        __self: this\n      }) : /*#__PURE__*/React.createElement(ChevronDownIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 92\n        },\n        __self: this\n      }))), this.hasSubNavItems && this.renderPopover());\n    }\n  }, {\n    key: \"hasSubNavItems\",\n    get: function () {\n      const {\n        navItem: {\n          items\n        }\n      } = this.props;\n      return Array.isArray(items) && items.length > 0;\n    }\n  }]);\n\n  return NavigationItemDesktop;\n}(Component);\n\n_defineProperty(NavigationItemDesktop, \"propTypes\", {\n  classes: PropTypes.object,\n  navItem: PropTypes.object,\n  routingStore: PropTypes.object\n});\n\n_defineProperty(NavigationItemDesktop, \"defaultProps\", {\n  classes: {},\n  navItem: {},\n  routingStore: {}\n});\n\nexport default withStyles(styles)(inject(\"routingStore\")(NavigationItemDesktop));","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/components/NavigationDesktop/NavigationItemDesktop.tsx"],"names":["React","Component","Fragment","PropTypes","inject","classNames","Button","Divider","Grid","ListItemText","MenuList","MenuItem","Popover","ChevronDownIcon","ChevronRight","ChevronUpIcon","withStyles","Router","Link","styles","theme","popover","left","maxWidth","padding","spacing","width","grid","navigationShopAllLink","display","textDecoration","fontSize","marginTop","marginBottom","fontFamily","typography","navigationShopAllLinkIcon","primaryNavItem","textTransform","NavigationItemDesktop","isSubNavOpen","providedNavItem","navItem","routingStore","props","currentNavItem","navigationItem","queryString","data","url","event","preventDefault","hasSubNavItems","setState","state","path","linkPath","push","navItemGroup","menuItems","items","map","item","index","contentForLanguage","navigationItemClassNames","isUrlRelative","shouldOpenInNewWindow","onClose","unshift","classes","paper","top","Array","isArray","renderSubNav","onClick","renderPopover","length","object"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport inject from \"hocs/inject\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popover from \"@material-ui/core/Popover\";\nimport ChevronDownIcon from \"mdi-material-ui/ChevronDown\";\nimport ChevronRight from \"mdi-material-ui/ChevronRight\";\nimport ChevronUpIcon from \"mdi-material-ui/ChevronUp\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Router from \"translations/i18nRouter\";\nimport Link from \"components/Link\";\n\nconst styles = (theme) => ({\n  popover: {\n    left: \"0!important\",\n    maxWidth: \"100vw\",\n    padding: theme.spacing(2),\n    width: \"100vw\"\n  },\n  grid: {\n    width: \"100vw\"\n  },\n  navigationShopAllLink: {\n    display: \"flex\",\n    textDecoration: \"underline\",\n    fontSize: \"14px\",\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(2),\n    fontFamily: theme.typography.fontFamily\n  },\n  navigationShopAllLinkIcon: {\n    fontSize: \"12px\"\n  },\n  primaryNavItem: {\n    textTransform: \"capitalize\"\n  }\n});\n\nclass NavigationItemDesktop extends Component {\n  static propTypes = {\n    classes: PropTypes.object,\n    navItem: PropTypes.object,\n    routingStore: PropTypes.object\n  };\n\n  static defaultProps = {\n    classes: {},\n    navItem: {},\n    routingStore: {}\n  };\n\n  state = { isSubNavOpen: false };\n\n  linkPath = (providedNavItem) => {\n    const { navItem, routingStore } = this.props;\n\n    const currentNavItem = (providedNavItem && providedNavItem.navigationItem) || navItem.navigationItem;\n\n    return routingStore.queryString !== \"\"\n      ? `${currentNavItem.data.url}?${routingStore.queryString}`\n      : `${currentNavItem.data.url}`;\n  }\n\n  get hasSubNavItems() {\n    const { navItem: { items } } = this.props;\n    return Array.isArray(items) && items.length > 0;\n  }\n\n  onClick = (event) => {\n    event.preventDefault();\n\n    if (this.hasSubNavItems) {\n      this.setState({ isSubNavOpen: !this.state.isSubNavOpen });\n    } else {\n      const path = this.linkPath();\n      Router.push(path);\n    }\n  };\n\n  onClose = () => {\n    this.setState({ isSubNavOpen: false });\n  };\n\n  renderSubNav(navItemGroup) {\n    const menuItems = navItemGroup.items.map((item, index) => {\n      const { navigationItem: { data: { contentForLanguage, classNames: navigationItemClassNames, isUrlRelative, shouldOpenInNewWindow } } } = item;\n      return (\n        <MenuItem dense key={index}>\n          <Link\n            className={navigationItemClassNames}\n            onClick={this.onClose}\n            route={this.linkPath(item)}\n            href={this.linkPath(item)}\n            isUrlAbsolute={!isUrlRelative}\n            shouldOpenInNewWindow={shouldOpenInNewWindow}\n          >\n            <ListItemText primary={contentForLanguage} />\n          </Link>\n        </MenuItem>\n      );\n    });\n\n    menuItems.unshift(<Divider key=\"divider\" />);\n\n    return menuItems;\n  }\n\n  renderPopover() {\n    const { classes, navItem, navItem: { items, navigationItem } } = this.props;\n\n    if (items) {\n      return (\n        <Popover\n          classes={{ paper: classes.popover }}\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{ left: 0, top: 64 }}\n          elevation={1}\n          onClose={this.onClose}\n          open={this.state.isSubNavOpen}\n        >\n          <Grid container className={classes.grid} spacing={2}>\n            {items.map((item, index) => {\n              const { navigationItem: { data: { contentForLanguage, classNames: navigationItemClassNames, isUrlRelative, shouldOpenInNewWindow } } } = item;\n              return (\n                <Grid item key={index}>\n                  <MenuList disablePadding>\n                    <MenuItem>\n                      <Link\n                        className={navigationItemClassNames}\n                        href={this.linkPath(item)}\n                        isUrlAbsolute={!isUrlRelative}\n                        onClick={this.onClose}\n                        shouldOpenInNewWindow={shouldOpenInNewWindow}\n                      >\n                        <ListItemText primary={contentForLanguage} />\n                      </Link>\n                    </MenuItem>\n                    {Array.isArray(item.items) && this.renderSubNav(item)}\n                  </MenuList>\n                </Grid>\n              );\n            })}\n          </Grid>\n          <Link\n            className={classes.navigationShopAllLink}\n            onClick={this.onClose}\n            route={this.linkPath(navItem)}\n            href={this.linkPath(navItem)}\n            isUrlAbsolute={!navigationItem.data.isUrlRelative}\n            shouldOpenInNewWindow={navigationItem.data.shouldOpenInNewWindow}\n          >\n            <span>Shop all {navigationItem.data.contentForLanguage} <ChevronRight className={classes.navigationShopAllLinkIcon} /></span>\n          </Link>\n        </Popover>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const { classes: { primaryNavItem }, navItem, navItem: { navigationItem } } = this.props;\n\n    return (\n      <Fragment>\n        <Button className={classNames(primaryNavItem, navigationItem.data.classNames)} color=\"inherit\" onClick={this.onClick} href={this.linkPath(navItem)}>\n          {navigationItem.data.contentForLanguage}\n          {this.hasSubNavItems && <Fragment>{this.state.isSubNavOpen ? <ChevronUpIcon /> : <ChevronDownIcon />}</Fragment>}\n        </Button>\n        {this.hasSubNavItems && this.renderPopover()}\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(inject(\"routingStore\")(NavigationItemDesktop));\n"]},"metadata":{},"sourceType":"module"}