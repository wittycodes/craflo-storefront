{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/usr/local/src/app/packages/craflo-frontend/src/reaction/context/TagsContext.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { createContext } from \"react\";\nimport PropTypes from \"prop-types\";\nexport var TagsContext = /*#__PURE__*/createContext({});\n/**\n *\n * @param {Array} tags - an array of tags\n * @param {React.node} children - the react elements to wrap\n * @returns {React.node} The tags provider\n */\n\nexport var TagsProvider = function TagsProvider(_ref) {\n  var tags = _ref.tags,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(TagsContext.Provider, {\n    value: tags,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, children);\n};\n_c = TagsProvider;\nTagsProvider.propTypes * {\n  children: PropTypes.node,\n  tags: PropTypes.arrayOf(PropTypes.object)\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsProvider\");","map":{"version":3,"sources":["/usr/local/src/app/packages/craflo-frontend/src/reaction/context/TagsContext.tsx"],"names":["React","createContext","PropTypes","TagsContext","TagsProvider","tags","children","propTypes","node","arrayOf","object"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,QAAT,QAASA,QAAT;AAAA,sBAC1B,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CAD0B;AAAA,CAArB;KAAMF,Y;AAMbA,YAAY,CAACG,SAAb,GAAyB;AACvBD,EAAAA,QAAQ,EAAEJ,SAAS,CAACM,IADG;AAEvBH,EAAAA,IAAI,EAAEH,SAAS,CAACO,OAAV,CAAkBP,SAAS,CAACQ,MAA5B;AAFiB,CAAzB","sourcesContent":["import React, { createContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const TagsContext = createContext({} as any);\n\n/**\n *\n * @param {Array} tags - an array of tags\n * @param {React.node} children - the react elements to wrap\n * @returns {React.node} The tags provider\n */\nexport const TagsProvider = ({ tags, children }) => (\n  <TagsContext.Provider value={tags}>\n    {children}\n  </TagsContext.Provider>\n);\n\nTagsProvider.propTypes * {\n  children: PropTypes.node,\n  tags: PropTypes.arrayOf(PropTypes.object)\n};\n"]},"metadata":{},"sourceType":"module"}